{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"source/images/TB1wQOfLXXXXXaoXpXXXXXXXXXX-40-40.png","path":"images/TB1wQOfLXXXXXaoXpXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1w81gLXXXXXXDXpXXXXXXXXXX-40-40.png","path":"images/TB1w81gLXXXXXXDXpXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1pi41LXXXXXaRXVXXXXXXXXXX-40-40.png","path":"images/TB1pi41LXXXXXaRXVXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1p09nLXXXXXXAXXXXXXXXXXXX-48-48.png","path":"images/TB1p09nLXXXXXXAXXXXXXXXXXXX-48-48.png","modified":0},{"_id":"source/images/TB1lsl9LXXXXXbgXFXXXXXXXXXX-40-40.png","path":"images/TB1lsl9LXXXXXbgXFXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1e9d0LXXXXXbkXVXXXXXXXXXX-48-48.png","path":"images/TB1e9d0LXXXXXbkXVXXXXXXXXXX-48-48.png","modified":0},{"_id":"source/images/TB1cut5LXXXXXc2XFXXXXXXXXXX-40-40.png","path":"images/TB1cut5LXXXXXc2XFXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1U10ZLXXXXXbTXVXXXXXXXXXX-40-40.png","path":"images/TB1U10ZLXXXXXbTXVXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1Tfd8LXXXXXbDXFXXXXXXXXXX-40-40.png","path":"images/TB1Tfd8LXXXXXbDXFXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1Qkt.LXXXXXakXFXXXXXXXXXX-48-48.png","path":"images/TB1Qkt.LXXXXXakXFXXXXXXXXXX-48-48.png","modified":0},{"_id":"source/images/TB1OCigLXXXXXXZXpXXXXXXXXXX-48-48.png","path":"images/TB1OCigLXXXXXXZXpXXXXXXXXXX-48-48.png","modified":0},{"_id":"source/images/TB1Mbh3LXXXXXXAXVXXXXXXXXXX-40-40.png","path":"images/TB1Mbh3LXXXXXXAXVXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1KdqaLXXXXXXgXFXXXXXXXXXX-40-40.png","path":"images/TB1KdqaLXXXXXXgXFXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1H142LXXXXXaiXVXXXXXXXXXX-40-40.png","path":"images/TB1H142LXXXXXaiXVXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1Ge01LXXXXXa1XVXXXXXXXXXX-40-40.png","path":"images/TB1Ge01LXXXXXa1XVXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1GN0VLXXXXXXVaXXXXXXXXXXX-40-40.png","path":"images/TB1GN0VLXXXXXXVaXXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1Cz4YLXXXXXcKXVXXXXXXXXXX-40-40.png","path":"images/TB1Cz4YLXXXXXcKXVXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB1BEpYLXXXXXcdXVXXXXXXXXXX-48-48.png","path":"images/TB1BEpYLXXXXXcdXVXXXXXXXXXX-48-48.png","modified":0},{"_id":"source/images/TB17xanLXXXXXapXXXXXXXXXXXX-40-40.png","path":"images/TB17xanLXXXXXapXXXXXXXXXXXX-40-40.png","modified":0},{"_id":"source/images/TB14HSnLXXXXXanXXXXXXXXXXXX-40-40.png","path":"images/TB14HSnLXXXXXanXXXXXXXXXXXX-40-40.png","modified":0},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0}],"Cache":[{"_id":"source/_posts/Elastic Search指定分析器与分析器测试.md","shasum":"ff8adf16632bdd7b17355449044ce2ba84319abe","modified":1453783922000},{"_id":"source/_posts/Javascript 进阶.md","shasum":"3b94cf3ed1f9901afdffe480acc6a1868f6809e8","modified":1453784041000},{"_id":"source/_posts/Fiddle调试iOS-Android-APP-SSL安全证书的方法.md","shasum":"ec876fa6e98f27911a36f6a907c1c4c172f0320f","modified":1456213769000},{"_id":"source/_posts/C#编码规范.md","shasum":"66afa247192c2e75baeba147c745866dc1fe3bc3","modified":1453783984000},{"_id":"source/_posts/QQ公众UI组件自动适配UI.md","shasum":"8649e8402198b417658fb96b524b4c625d3e9635","modified":1455675600000},{"_id":"source/_posts/git-ignore-file.md","shasum":"09abed681a4e73a6fa770772e55c53f6c5069dea","modified":1453784322000},{"_id":"source/_posts/git-重设远程源.md","shasum":"a0c813091f35e851ae8aa9a5e707bb0ac43efc1f","modified":1455526985000},{"_id":"source/_posts/git回滚到已提交的上个版本.md","shasum":"828f6be462b3cbbd25bda9623656e7b28e4bd36d","modified":1455526494000},{"_id":"source/_posts/中文全文检索.md","shasum":"36ca8f3260f134d05d220d60ad9946ed9914b7e7","modified":1453783761000},{"_id":"source/_posts/前端冷知识.md","shasum":"c86e18abad7f2cf3cf60ad359112bf77bbb22898","modified":1455675433000},{"_id":"source/_posts/linux_command_1.md","shasum":"7cb265322e5f9a8c8413baa86f7249cdea8676f4","modified":1473300088000},{"_id":"source/_posts/tmux入门.md","shasum":"51ee8a356bdffee5669ac251273a758ba64751bb","modified":1472635802000},{"_id":"source/_posts/通过http代理访问ssh.md","shasum":"5741162f700a50b8cebb52175286f52a2c4f92b2","modified":1455760189000},{"_id":"source/_posts/钉钉API内置图标.md","shasum":"6005413e552100e71e7ff79c3fa34e09d43207cf","modified":1453791354000},{"_id":"source/_posts/技术分享-2016-1-22.md","shasum":"c5878bba46f3532467808be4a785386c37efb8ac","modified":1453784488000},{"_id":"source/_posts/简历.md","shasum":"f5d274026aaf5b5679f533f0fcadb3a260889ea9","modified":1479808509000},{"_id":"source/images/TB1Cz4YLXXXXXcKXVXXXXXXXXXX-40-40.png","shasum":"8abce313323e3557550398bd5d77e92b4262a0fe","modified":1453789913000},{"_id":"source/images/TB17xanLXXXXXapXXXXXXXXXXXX-40-40.png","shasum":"de84feb461ca6ef7018ce6059dfdf947ed8f9a11","modified":1453789938000},{"_id":"source/images/TB14HSnLXXXXXanXXXXXXXXXXXX-40-40.png","shasum":"7053235c651f9f499e16aed9cd5fef40872f9306","modified":1453789952000},{"_id":"source/images/TB1BEpYLXXXXXcdXVXXXXXXXXXX-48-48.png","shasum":"4fbf738e718a75da2fb13f0cb7f04d2d3296f691","modified":1453789932000},{"_id":"source/images/TB1KdqaLXXXXXXgXFXXXXXXXXXX-40-40.png","shasum":"6f1c90a06e1e5dffc8b42081ab6ba6014e15a73f","modified":1453789926000},{"_id":"source/images/TB1Ge01LXXXXXa1XVXXXXXXXXXX-40-40.png","shasum":"06ba307fbbb76d428dfeb6d25bff73be33541c91","modified":1453789946000},{"_id":"source/images/TB1GN0VLXXXXXXVaXXXXXXXXXXX-40-40.png","shasum":"7bd290883f9ecbe85719b07ab856542fb1074d6d","modified":1453789963000},{"_id":"source/images/TB1H142LXXXXXaiXVXXXXXXXXXX-40-40.png","shasum":"898c601141f23b8ddd51b0b5fae6f81461982823","modified":1453789941000},{"_id":"source/images/TB1Tfd8LXXXXXbDXFXXXXXXXXXX-40-40.png","shasum":"4e1af96f555e81e298a1ac66f55999e5fb61b33a","modified":1453789920000},{"_id":"source/images/TB1Mbh3LXXXXXXAXVXXXXXXXXXX-40-40.png","shasum":"e6041eb0b8385227a04bbe8cc5ed3c47c5dbeacb","modified":1453789774000},{"_id":"source/images/TB1OCigLXXXXXXZXpXXXXXXXXXX-48-48.png","shasum":"280232b582fb345585316a7064a8a593b192634f","modified":1453789955000},{"_id":"source/images/TB1Qkt.LXXXXXakXFXXXXXXXXXX-48-48.png","shasum":"b25daaa8ae0da87c2ffd6b0a3f5eceaa1ee962ac","modified":1453789935000},{"_id":"source/images/TB1U10ZLXXXXXbTXVXXXXXXXXXX-40-40.png","shasum":"99761f4de4e02121e7744db9b9bc5267d323709f","modified":1453789747000},{"_id":"source/images/TB1lsl9LXXXXXbgXFXXXXXXXXXX-40-40.png","shasum":"b2029e6c87f31c6618707d7e539b1f7f1f3fc011","modified":1453789943000},{"_id":"source/images/TB1cut5LXXXXXc2XFXXXXXXXXXX-40-40.png","shasum":"881caadb41b497c4a843b02323a13abd829287dd","modified":1453789960000},{"_id":"source/images/TB1e9d0LXXXXXbkXVXXXXXXXXXX-48-48.png","shasum":"44fa85eb3ecb11986f006883e07508d6edaa88d2","modified":1453789917000},{"_id":"source/images/TB1wQOfLXXXXXaoXpXXXXXXXXXX-40-40.png","shasum":"ca3fa8cd25491b46a0cb6ddd1b9dc2d0d05b9290","modified":1453789949000},{"_id":"source/images/TB1w81gLXXXXXXDXpXXXXXXXXXX-40-40.png","shasum":"299d910ce9de0cdc117e3fbbb2bf91b4a9034ade","modified":1453789929000},{"_id":"source/images/TB1pi41LXXXXXaRXVXXXXXXXXXX-40-40.png","shasum":"600e8f8210cb37ce7bbbef0cbe47683775150a3f","modified":1453789957000},{"_id":"source/images/TB1p09nLXXXXXXAXXXXXXXXXXXX-48-48.png","shasum":"a94dc17733999773effd09e6becc7783d83981ef","modified":1453789923000},{"_id":"themes/landscape/README.md","shasum":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1453783307000},{"_id":"themes/landscape/_config.yml","shasum":"5103850da1fbad7275e23dba8bb8fcdac0454365","modified":1453784933000},{"_id":"themes/landscape/Gruntfile.js","shasum":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1453783307000},{"_id":"themes/landscape/LICENSE","shasum":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","shasum":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/archive.ejs","shasum":"d7de6421497ffaf65e4f5fe4bed71fcea51fde80","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/article.ejs","shasum":"01201725258ad2aaee606cd4dfdebc21b646def1","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","shasum":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","shasum":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/head.ejs","shasum":"da9a4ab32efc44c098f317fe64e2335989929b0e","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/header.ejs","shasum":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/footer.ejs","shasum":"4b19c1080c9e6c2acd922a88ed29d183a3b5bc09","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","shasum":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","shasum":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","shasum":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","shasum":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","shasum":"f26d30355ba9144c51e700e8edc6a4ab6144ff9a","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","shasum":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","shasum":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1453783307000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","shasum":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1453783307000},{"_id":"themes/landscape/layout/_widget/category.ejs","shasum":"36ab37878129d152e3cbdeb839c08e52af1acd58","modified":1453783307000},{"_id":"themes/landscape/layout/_widget/archive.ejs","shasum":"985fbeb01142b9d526cda8ebc372c1d361d69a6b","modified":1453783307000},{"_id":"themes/landscape/layout/_widget/tag.ejs","shasum":"b3f321ddda6be2702a286d5b11af9533509506fb","modified":1453783307000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","shasum":"feba7c00fa59ba13bf870b358a499fde4473d335","modified":1453783307000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","shasum":"34dc8cdd96cdb41dd11cb7513f13714373e5104a","modified":1453783307000},{"_id":"themes/landscape/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1453783307000},{"_id":"themes/landscape/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1453783307000},{"_id":"themes/landscape/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1453783307000},{"_id":"themes/landscape/layout/layout.ejs","shasum":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1453783307000},{"_id":"themes/landscape/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1453783307000},{"_id":"themes/landscape/scripts/fancybox.js","shasum":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1453783307000},{"_id":"themes/landscape/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1453783307000},{"_id":"themes/landscape/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1453783307000},{"_id":"themes/landscape/package.json","shasum":"85358dc34311c6662e841584e206a4679183943f","modified":1453783307000},{"_id":"themes/landscape/source/css/_extend.styl","shasum":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/archive.styl","shasum":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/article.styl","shasum":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/header.styl","shasum":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/comment.styl","shasum":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/footer.styl","shasum":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","shasum":"36eefe6332b86b66023a9884b754d305235846b4","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","shasum":"bc5487b9a0bfe5f745423331824d3f3637ccd430","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","shasum":"890349df5145abf46ce7712010c89237900b3713","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","shasum":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1453783307000},{"_id":"themes/landscape/source/css/_variables.styl","shasum":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1453783307000},{"_id":"themes/landscape/source/css/_util/grid.styl","shasum":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1453783307000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","shasum":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1453783307000},{"_id":"themes/landscape/source/css/_util/mixin.styl","shasum":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1453783307000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1453783307000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1453783307000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1453783307000},{"_id":"themes/landscape/source/css/style.styl","shasum":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1453783307000},{"_id":"themes/landscape/source/js/script.js","shasum":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1453783307000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1453783307000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1453783307000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1453783307000},{"_id":"themes/landscape/source/css/images/banner.jpg","shasum":"843d9d47bf2b7b75495db11b3d765efaaae442a9","modified":1453783307000},{"_id":"public/images/TB1wQOfLXXXXXaoXpXXXXXXXXXX-40-40.png","modified":1479114590913,"shasum":"ca3fa8cd25491b46a0cb6ddd1b9dc2d0d05b9290"},{"_id":"public/images/TB1w81gLXXXXXXDXpXXXXXXXXXX-40-40.png","modified":1479114590921,"shasum":"299d910ce9de0cdc117e3fbbb2bf91b4a9034ade"},{"_id":"public/images/TB1pi41LXXXXXaRXVXXXXXXXXXX-40-40.png","modified":1479114590923,"shasum":"600e8f8210cb37ce7bbbef0cbe47683775150a3f"},{"_id":"public/images/TB1p09nLXXXXXXAXXXXXXXXXXXX-48-48.png","modified":1479114590925,"shasum":"a94dc17733999773effd09e6becc7783d83981ef"},{"_id":"public/images/TB1lsl9LXXXXXbgXFXXXXXXXXXX-40-40.png","modified":1479114590927,"shasum":"b2029e6c87f31c6618707d7e539b1f7f1f3fc011"},{"_id":"public/images/TB1e9d0LXXXXXbkXVXXXXXXXXXX-48-48.png","modified":1479114590931,"shasum":"44fa85eb3ecb11986f006883e07508d6edaa88d2"},{"_id":"public/images/TB1cut5LXXXXXc2XFXXXXXXXXXX-40-40.png","modified":1479114590937,"shasum":"881caadb41b497c4a843b02323a13abd829287dd"},{"_id":"public/images/TB1U10ZLXXXXXbTXVXXXXXXXXXX-40-40.png","modified":1479114590940,"shasum":"99761f4de4e02121e7744db9b9bc5267d323709f"},{"_id":"public/images/TB1Tfd8LXXXXXbDXFXXXXXXXXXX-40-40.png","modified":1479114590943,"shasum":"4e1af96f555e81e298a1ac66f55999e5fb61b33a"},{"_id":"public/images/TB1Qkt.LXXXXXakXFXXXXXXXXXX-48-48.png","modified":1479114590945,"shasum":"b25daaa8ae0da87c2ffd6b0a3f5eceaa1ee962ac"},{"_id":"public/images/TB1OCigLXXXXXXZXpXXXXXXXXXX-48-48.png","modified":1479114590954,"shasum":"280232b582fb345585316a7064a8a593b192634f"},{"_id":"public/images/TB1Mbh3LXXXXXXAXVXXXXXXXXXX-40-40.png","modified":1479114590958,"shasum":"e6041eb0b8385227a04bbe8cc5ed3c47c5dbeacb"},{"_id":"public/images/TB1KdqaLXXXXXXgXFXXXXXXXXXX-40-40.png","modified":1479114590964,"shasum":"6f1c90a06e1e5dffc8b42081ab6ba6014e15a73f"},{"_id":"public/images/TB1H142LXXXXXaiXVXXXXXXXXXX-40-40.png","modified":1479114590967,"shasum":"898c601141f23b8ddd51b0b5fae6f81461982823"},{"_id":"public/images/TB1Ge01LXXXXXa1XVXXXXXXXXXX-40-40.png","modified":1479114590969,"shasum":"06ba307fbbb76d428dfeb6d25bff73be33541c91"},{"_id":"public/images/TB1GN0VLXXXXXXVaXXXXXXXXXXX-40-40.png","modified":1479114590972,"shasum":"7bd290883f9ecbe85719b07ab856542fb1074d6d"},{"_id":"public/images/TB1Cz4YLXXXXXcKXVXXXXXXXXXX-40-40.png","modified":1479114590974,"shasum":"8abce313323e3557550398bd5d77e92b4262a0fe"},{"_id":"public/images/TB1BEpYLXXXXXcdXVXXXXXXXXXX-48-48.png","modified":1479114590976,"shasum":"4fbf738e718a75da2fb13f0cb7f04d2d3296f691"},{"_id":"public/images/TB17xanLXXXXXapXXXXXXXXXXXX-40-40.png","modified":1479114590978,"shasum":"de84feb461ca6ef7018ce6059dfdf947ed8f9a11"},{"_id":"public/images/TB14HSnLXXXXXanXXXXXXXXXXXX-40-40.png","modified":1479114590980,"shasum":"7053235c651f9f499e16aed9cd5fef40872f9306"},{"_id":"public/js/script.js","modified":1479114590982,"shasum":"2876e0b19ce557fca38d7c6f49ca55922ab666a1"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1479114590984,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1479114590987,"shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1479114590992,"shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1479114590996,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1479114591008,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1479114591010,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1479114591013,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1479114591015,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1479114591026,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1479114591028,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1479114591033,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1479114591036,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1479114591058,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1479114591062,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1479114591094,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1479114592021,"shasum":"e9ae89d3eaf09b4fb3b48f3da5e58e74ea5875b0"},{"_id":"public/css/images/banner.jpg","modified":1479114592229,"shasum":"843d9d47bf2b7b75495db11b3d765efaaae442a9"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1479114592235,"shasum":"04c3bf56d87a0828935bd6b4aee859995f321693"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1479114592238,"shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1479114592258,"shasum":"46fcc0194d75a0ddac0a038aee41b23456784814"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1479114592263,"shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e"},{"_id":"public/css/fonts/FontAwesome.otf","modified":1479114592265,"shasum":"b5b4f9be85f91f10799e87a083da1d050f842734"},{"_id":"public/2016/09/08/linux_command_1/index.html","modified":1479114592343,"shasum":"c7139d3259ea5d5afd28d9028420a3c0f16e21f2"},{"_id":"public/2016/08/31/tmux入门/index.html","modified":1479114592355,"shasum":"89639fa0a81a549f03e3ce2247b7b037065b8995"},{"_id":"public/2016/02/23/Fiddle调试iOS-Android-APP-SSL安全证书的方法/index.html","modified":1479114592364,"shasum":"ef4f190ce8b78e08e115daf96706eded47da18d4"},{"_id":"public/2016/02/18/通过http代理访问ssh/index.html","modified":1479114592373,"shasum":"c49f002217731b44587a3565bc75bb9deaaa9168"},{"_id":"public/2016/02/17/QQ公众UI组件自动适配UI/index.html","modified":1479114592381,"shasum":"c17fa1960681350fa454a2b801102cffd538b952"},{"_id":"public/2016/02/17/前端冷知识/index.html","modified":1479114592398,"shasum":"24ce1c35411d62656f1ebc9915ecb4d69e2a0d2d"},{"_id":"public/2016/02/15/git-重设远程源/index.html","modified":1479114592406,"shasum":"19c50a25f14ced74214f0c443df215d3625e7dfa"},{"_id":"public/2016/02/15/git回滚到已提交的上个版本/index.html","modified":1479114592418,"shasum":"4d10183190bb2ff1907c3f1c777c4c5112739f6f"},{"_id":"public/2016/01/26/钉钉API内置图标/index.html","modified":1479114592430,"shasum":"21a60c7f9d5522f1f191b164297c0487d7313bfd"},{"_id":"public/2016/01/26/技术分享-2016-1-22/index.html","modified":1479114592448,"shasum":"8fcb2260b9435d6d255e7e91212b9c0f5ec0fc05"},{"_id":"public/2016/01/26/git-ignore-file/index.html","modified":1479114592462,"shasum":"b92beb118a35bd691698dfd81cab9d29d25c36b3"},{"_id":"public/2016/01/26/Javascript 进阶/index.html","modified":1479114592471,"shasum":"959adf2157a98290c2fa710e7a0fc603195cbb3c"},{"_id":"public/2016/01/26/C#编码规范/index.html","modified":1479114592513,"shasum":"d4d405a10bb2539a4a844cc85d1f3825cda2e270"},{"_id":"public/2016/01/26/Elastic Search指定分析器与分析器测试/index.html","modified":1479114592525,"shasum":"3cd9c2064a3382497d92b6b1c6ace101713fe001"},{"_id":"public/2016/01/26/中文全文检索/index.html","modified":1479114592534,"shasum":"c1da3a751b9a55315ce50e1749d50765fcad4775"},{"_id":"public/2016/01/26/简历/index.html","modified":1479808536714,"shasum":"e0a83cba4b748c4f45efc0829f10d3878f9ece3d"},{"_id":"public/tags/C/index.html","modified":1479114592554,"shasum":"767a644655b34e6e9ab0d5afd1920893f6476f85"},{"_id":"public/tags/编码规范/index.html","modified":1479114592564,"shasum":"1e71532d4d7e1c59f314f6830e4f5e32d8840b7d"},{"_id":"public/tags/Coding/index.html","modified":1479114592571,"shasum":"741a331155a7b1f424a64fe47c4b42e5226d97f1"},{"_id":"public/tags/ssh/index.html","modified":1479114592582,"shasum":"be00ea48ce35389c7837cc94fbaebb6db48bb61a"},{"_id":"public/tags/http-proxy/index.html","modified":1479114592588,"shasum":"beeeffcd59704ae59a4182ee5eef25945d09ea3c"},{"_id":"public/tags/nc/index.html","modified":1479114592601,"shasum":"074bdd7800717f07707cef561c391d6fad6b65ed"},{"_id":"public/tags/corkscrew/index.html","modified":1479114592610,"shasum":"6c46a390f82241863edac0ab0c6bea91b6bf7365"},{"_id":"public/tags/banggood-com/index.html","modified":1479114592617,"shasum":"6c6f9927e10dd73f638ed08e74a74ad231188386"},{"_id":"public/tags/ebay/index.html","modified":1479114592627,"shasum":"4f86e4d96300d0a76c6c15d2b33897ee0c6110ed"},{"_id":"public/tags/棒谷/index.html","modified":1479114592634,"shasum":"5fdd628a67908831f911516b8c6256321ca9770a"},{"_id":"public/tags/技术分享/index.html","modified":1479114592640,"shasum":"f9b542daf3a68c75c9c57145224ba8d7075e9abb"},{"_id":"public/tags/iOS/index.html","modified":1479114592648,"shasum":"6afc8671a7f7936c5f9dca7c813da22f30d06b6a"},{"_id":"public/tags/Android/index.html","modified":1479114592657,"shasum":"9a55889ec1a379371707f02941440aa6d2ea7ada"},{"_id":"public/tags/前端/index.html","modified":1479114592668,"shasum":"3128ebfe9a3f8141a72a7c5f11845dffc4710c28"},{"_id":"public/tags/js/index.html","modified":1479114592676,"shasum":"0c7838161516aed438e6bd8b346227b9638ec08b"},{"_id":"public/tags/css/index.html","modified":1479114592684,"shasum":"1283f28c409dd1248b9ded406472a7757d1b8b21"},{"_id":"public/tags/Elastic-Search/index.html","modified":1479114592694,"shasum":"2ba783844dc03b09ecd3345481451003eaec955b"},{"_id":"public/tags/全文检索/index.html","modified":1479114592702,"shasum":"8217d46660db85aeb39d1793913f71e91007f657"},{"_id":"public/tags/tmux/index.html","modified":1479114592714,"shasum":"2d4f5cc036caf52a5fba84a749e5275f0fe5d1f5"},{"_id":"public/tags/iterm/index.html","modified":1479114592720,"shasum":"6f112611a807d8c3a9bf4a26f0d67850fd1a402b"},{"_id":"public/tags/linux/index.html","modified":1479114592725,"shasum":"6fcd84145c662ca3e9cc9f356f855e6a30a38aec"},{"_id":"public/tags/command/index.html","modified":1479114592732,"shasum":"66eec5f65d0a8bb0c44a40cf00fffefe614171e0"},{"_id":"public/tags/network/index.html","modified":1479114592737,"shasum":"34f5d77df36359b6e71e53eec25e44fc81c7dbc9"},{"_id":"public/tags/git/index.html","modified":1479114592751,"shasum":"3d5adda8423c7728f2a33f8e5b51204a0ba07623"},{"_id":"public/tags/git-revert/index.html","modified":1479114592760,"shasum":"dd58c6d6d3c65fa710f3338bb1f7df855cb53319"},{"_id":"public/tags/git-rebase/index.html","modified":1479114592767,"shasum":"86e47a625b14456bfe48277db9b26ad197069f63"},{"_id":"public/tags/gitignore/index.html","modified":1479114592773,"shasum":"b64cc3837c7d76e9adbaf7323e87a66cca2e0e72"},{"_id":"public/tags/javascript/index.html","modified":1479114592782,"shasum":"8a550656ca8cec4b0fee9e6acabd49b26e5e247b"},{"_id":"public/tags/ui/index.html","modified":1479114592788,"shasum":"2da3eddb4ce2c472c29bf803daad44bf6f37513e"},{"_id":"public/tags/Javascript/index.html","modified":1479114592799,"shasum":"be46cedce32d9ed7ef5b670610234811dcc665f8"},{"_id":"public/tags/SSL-debug/index.html","modified":1479114592807,"shasum":"834a8cf1334926d324f8c59fddd12d56a1e08c52"},{"_id":"public/tags/Fiddler/index.html","modified":1479114592812,"shasum":"ccb5965cbf27a2f7b3cbc846989da85dbd58a4d3"},{"_id":"public/index.html","modified":1479114592848,"shasum":"7e8917e018d74af122ff49546221ab2dd274487f"},{"_id":"public/page/2/index.html","modified":1479808536791,"shasum":"9347cd65cf4d531c6bb2640f64293b7fa7e751e0"},{"_id":"public/archives/index.html","modified":1479114592897,"shasum":"fcee04079233c40f4e346b0e3e4253ef4c40b06f"},{"_id":"public/archives/page/2/index.html","modified":1479114592917,"shasum":"e14d7d3201199587d02d805af326224d6b3cc804"},{"_id":"public/archives/2016/index.html","modified":1479114592936,"shasum":"c0df1ebb57810af11e34012130e3f74b6ba7cfd5"},{"_id":"public/archives/2016/page/2/index.html","modified":1479114592950,"shasum":"467b006b5e8faefc8f23bafd0a70bda77e786440"},{"_id":"public/archives/2016/01/index.html","modified":1479114592970,"shasum":"2488cc5d058ee47c439673f0c44e4c21373000e0"},{"_id":"public/archives/2016/02/index.html","modified":1479114592983,"shasum":"2a36307294486ba9c898b743b2652cccbdd0d6a1"},{"_id":"public/archives/2016/08/index.html","modified":1479114592991,"shasum":"ab2b5e1b9ee0abb08960943fbb43a6c0de93c142"},{"_id":"public/archives/2016/09/index.html","modified":1479114592996,"shasum":"1497db03cf0af00e7a28ccbb28942f5aa27030a4"}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"C#编码规范","date":"2016-01-26T04:52:00.000Z","_content":"## 概述\n\n### 规范制定原则\n\n* 方便代码的交流和维护。\n* 不影响编码的效率，不与大众习惯冲突。\n* 使代码更美观、阅读更方便。\n* 使代码的逻辑更清晰、更易于理解。\n\n### 术语定义\n\n**Pascal 大小写**\n\n将标识符的首字母和后面连接的每个单词的首字母都大写。可以对三字符或更多字符的标识符使用Pascal 大小写。例：\n\n`BackColor`\n\n**Camel 大小写**\n\n标识符的首字母小写，而每个后面连接的单词的首字母都大写。例：\n\n`backColor`\n\n**匈牙利命名法**\n\n匈牙利命名法是一名匈牙利程序员发明的，而且他在微软工作了多年。此命名法就是通过微软的各种产品和文档传出来的。多数有经验的程序员，不管他们用的是哪门儿语言，都或多或少在使用它。\n\n这种命名法的基本原则是：\n\n> 变量名＝属性＋类型＋对象描述\n\n即一个变量名是由三部分信息组成，这样，程序员很容易理解变量的类型、用途，而且便于记忆。\n\n下边是一些推荐使用的规则例子，你可以挑选使用，也可以根据个人喜好作些修改再用之。\n\n - 属性部分：\n  - 全局变量： g_\n  - 常量 ： c_\n  - 类成员变量： m_\n\n - 类型部分：\n  - 指针： p\n  - 句柄： h\n  - 布尔型： b\n  - 浮点型： f\n  - 无符号： u\n\n - 描述部分：\n  - 初始化： Init\n  - 临时变量： Tmp\n  - 目的对象： Dst\n  - 源对象： Src\n  - 窗口： Wnd\n\n下边举例说明：\n\n- hwnd： h表示句柄，wnd表示窗口，合起来为“窗口句柄”。\n- m_bFlag： m表示成员变量，b表示布尔，合起来为：“某个类的成员变量，布尔型，是一个状态标志”。\n\n## 代码外观\n\n### 列宽\n\n代码列宽控制在120字符左右。\n\n### 换行\n\n当表达式超出或即将超出规定的列宽，遵循以下规则进行换行\n\n- 在逗号后换行。\n- 在操作符前换行。\n- 规则1优先于规则2。\n\n当以上规则会导致代码混乱的时候自己采取更灵活的换行规则。\n\n### 缩进 \n\n缩进应该是每行一个Tab(4个空格)，不要在代码中使用Tab字符。\n\nVisual Studio 设置：工具->选项->文本编辑器->C#->制表符->插入空格，制表符大小=4，缩进大小=4\n\n### 空行\n\n空行是为了将逻辑上相关联的代码分块，以便提高代码的可阅读性。\n\n**在以下情况下使用两个空行**\n\n- 接口和类的定义之间。\n- 枚举和类的定义之间。\n- 类与类的定义之间。\n\n**在以下情况下使用一个空行**\n\n- 方法与方法、属性与属性之间。\n- 方法中变量声明与语句之间。\n- 方法与方法之间。\n- 方法中不同的逻辑块之间。\n- 方法中的返回语句与其他的语句之间。\n- 属性与方法、属性与字段、方法与字段之间。\n- 注释与它注释的语句间不空行，但与其他的语句间空一行。\n\n### 空格\n\n**在以下情况中要使用到空格**\n\n- 关键字和左括符 “(” 应该用空格隔开。如：\n\n`while (true)`\n\n注意在方法名和左括符 “(” 之间不要使用空格，这样有助于辨认代码中的方法调用与关键字。\n\n- 多个参数用逗号隔开，每个逗号后都应加一个空格。\n- 除了 . 之外，所有的二元操作符都应用空格与它们的操作数隔开。一元操作符、++及--与操作数间不需要空格。如：\n\n```cs\na += c + d;\na = (a + b)/(c*d);\n\nwhile (d++ == s++)\n{\n    n++;\n}\n\nPrintSize(\"size is \" + size + \"\\n\");\n```\n\n- 语句中的表达式之间用空格隔开。如：\n\n` for (expr1; expr2; expr3) `\n\n### 括号 - ()\n\n- 左括号“(”不要紧靠关键字，中间用一个空格隔开。\n- 左括号“(”与方法名之间不要添加任何空格。\n- 没有必要的话不要在返回语句中使用()。\n\n### 花括号 - {}\n\n- 左花括号 “{” 放于关键字或方法名的下一行并与之对齐。如：\n\n```cs\nif (condition)\n{\n}\n\npublic int Add(int x, int y)\n{\n}\n```\n\n- 左花括号 “{” 要与相应的右花括号 “}”对齐。\n- 通常情况下左花括号 “{”单独成行，不与任何语句并列一行。\n- if、while、do语句后一定要使用{}，即使{}号中为空或只有一条语句。如：\n\n```cs\nif (somevalue == 1)\n{\n    somevalue = 2;\n}\n```\n\n- 右花括号 “}” 后建议加一个注释以便于方便的找到与之相应的 {。如:\n\n```cs\nwhile(1)\n{\n    if(valid)\n    {\n    } // if valid\n    else\n    {\n    } // not valid\n} // end forever\n```\n\n## 程序注释\n\n### 注释概述\n\n- 修改代码时，总是使代码周围的注释保持最新。\n- 在每个例程的开始，提供标准的注释样本以指示例程的用途、假设和限制很有帮助。注释样本应该是解释它为什么存在和可以做什么的简短介绍.\n- 避免在代码行的末尾添加注释；行尾注释使代码更难阅读。不过在批注变量声明时，行尾注释是合适的；在这种情况下，将所有行尾注释在公共制表位处对齐。 \n- 避免杂乱的注释，如一整行星号。而是应该使用空白将注释同代码分开。 \n- 避免在块注释的周围加上印刷框。这样看起来可能很漂亮，但是难于维护。\n- 在部署发布之前，移除所有临时或无关的注释，以避免在日后的维护工作中产生混乱。\n- 如果需要用注释来解释复杂的代码节，请检查此代码以确定是否应该重写它。尽一切可能不注释难以理解的代码，而应该重写它。尽管一般不应该为了使代码更简单以便于人们使用而牺牲性能，但必须保持性能和可维护性之间的平衡。\n- 在编写代码时就注释，因为以后很可能没有时间这样做。另外，如果有机会复查已编写的代码，在今天看来很明显的东西六周以后或许就不明显了。\n- 避免多余的或不适当的注释，不应包含个人情绪内容，如幽默的不主要的备注。\n- 在编写注释时使用完整的句子。注释应该阐明代码，而不应该增加多义性。 \n- 使用注释来解释代码的意图。它们不应作为代码的联机翻译。 \n- 注释代码中不十分明显的内容。\n- 为了防止问题反复出现，对错误修复和解决方法代码总是使用注释。\n- 对由循环和逻辑分支组成的代码使用注释。这些是帮助源代码读者的主要方面。 \n- 在整个应用程序中，使用具有一致的标点和结构的统一样式来构造注释。 \n- 用空白将注释同注释分隔符分开。在没有颜色提示的情况下查看注释时，这样做会使注释很明显且容易被找到。\n- 代码修改变更记录不应使用注释标明修改日期和修改人，注释应只针对代码不记录版本，代码版本应该使用代码版本系统进行管理\n- 为了使层次清晰，在闭合的右花括号后注释该闭合所对应的起点。\n\n```cs\nnamespace SCB.Framework.Web \n{\n} // namespace SCB.Framework.Web\n```\n\n### 文档型注释\n\n该类注释采用.Net已定义好的Xml标签来标记，在声明接口、类、方法、属性、字段都应该使用该类注释，以便代码完成后直接生成代码文档，让别人更好的了解代码的实现和接口。如\n\n```cs\n/// <summary> MyMethod is a method in the MyClass class.\n/// <para> Here's how you could make a second paragraph in a description.\n/// <see cref=\"System.Console.WriteLine\"/> \n/// for information about output statements.\n/// </para>\n/// <seealso cref=\"MyClass.Main\"/>\n/// </summary>\npublic static void MyMethod(int Int1)\n{\n}\n```\n\n注释标签的使用请参考:[http://msdn.microsoft.com/zh-cn/library/5ast78ax.aspx](http://msdn.microsoft.com/zh-cn/library/5ast78ax.aspx \"Microsoft Recommended Tags for Documentation Comments (C# Programming Guide)\")\n\n### 类c注释\n\n该类注释用于\n\n- 复杂程序逻辑说明与技术事项\n\n**用法**\n\n```cs\n/*\n动态路由算法使用Round-robin算法，原理是...\n*/\n```\n\n### 单行注释\n\n该类注释用于\n\n- 方法内的代码注释。如变量的声明、代码或代码段的解释。例：\n\n```cs\n//\n// 注释语句\n// \nprivate int number;\n\n或\n\n// 注释语句\nprivate int number;\n```\n \n- 方法内变量的声明或花括号后的注释, 例：\n\n```cs\nif (1 == 1) // always true\n{\n    statement; \n} // always true\n```\n\n## 声明\n\n### 每行声明数\n\n一行只建议作一个声明，并按字母顺序排列。如：\n\n```cs\nint level; // 推荐\nint size; // 推荐\nint x, y; // 不推荐\n```\n\n### 初始化\n\n建议在变量声明时就对其做初始化。\n\n### 位置\n\n变量建议置于块的开始处，不要总是在第一次使用它们的地方做声明。如：\n\n```cs\nvoid MyMethod()\n{\n    int int1 = 0;\n\n    if (condition)\n    {\n        int int2 = 0;\n        ...\n    }\n}\n```\n\n**例外情况**\n\n```cs\nfor (int i = 0; i < maxLoops; i++)\n{\n    ...\n}\n```\n\n**应避免不同层次间的变量重名**，如：\n\n```cs\nint count;\n...\n\nvoid MyMethod()\n{\n    if (condition)\n    {\n        int count = 0; // 避免\n        ...\n    }\n    ...\n}\n```\n\n### 类和接口的声明\n\n- 在方法名与其后的左括号间没有任何空格。\n- 左花括号 “{” 出现在声明的下行并与之对齐，单独成行。\n- 方法间用一个空行隔开。\n\n### 字段的声明\n\n不要使用是 public 或 protected 的实例字段。如果避免将字段直接公开给开发人员，可以更轻松地对类进行版本控制，原因是在维护二进制兼容性时字段不能被更改为属性。考虑为字段提供 get 和set 属性访问器，而不是使它们成为公共的。 get 和 set 属性访问器中可执行代码的存在使得可以进行后续改进，如在使用属性或者得到属性更改通知时根据需要创建对象。下面的代码示例阐释带有 get 和 set 属性访问器的私有实例字段的正确使用。例：\n\n```cs\npublic class Control: Component\n{\n    private int handle;\n\n    public int Handle\n    {\n        get\n        {\n            return handle; \n        }\n    }\n}\n```\n\n## 命名规范\n\n### 命名概述\n\n> 名称应该说明“什么”而不是“如何”。通过避免使用公开基础实现（它们会发生改变）的名称，可以保留简化复杂性的抽象层。例如，可以使用 `GetNextStudent()`，而不是 `GetNextArrayElement`()。 \n\n**命名原则是：**\n\n> 选择正确名称时的困难可能表明需要进一步分析或定义项的目的。使名称足够长以便有一定的意义，并且足够短以避免冗长。唯一名称在编程上仅用于将各项区分开。表现力强的名称是为了帮助人们阅读；因此，提供人们可以理解的名称是有意义的。不过，请确保选择的名称符合适用语言的规则和标准。\n\n**以下几点是推荐的命名方法：**\n\n- 避免容易被主观解释的难懂的名称，如方面名 `AnalyzeThis()`，或者属性名 `xxK8`。这样的名称会导致多义性。\n- 在类属性的名称中包含类名是多余的，如 `Book.BookTitle`。而是应该使用 `Book.Title`。\n- 只要合适，在变量名的末尾或开头加计算限定符`（Avg、Sum、Min、Max、Index）`。\n- 在变量名中使用互补对，如 `min/max、begin/end` 和 `open/close`。 \n- 布尔变量名应该包含 `Is`，这意味着 `Yes/No` 或 `True/False` 值，如 `fileIsFound`。\n- 在命名状态变量时，避免使用诸如 `Flag` 的术语。状态变量不同于布尔变量的地方是它可以具有两个以上的可能值。不是使用 `documentFlag`，而是使用更具描述性的名称，如 `documentFormatType`。\n- 即使对于可能仅出现在几个代码行中的生存期很短的变量，仍然使用有意义的名称。仅对于短循环索引使用单字母变量名，如 i 或 j。 可能的情况下，尽量不要使用原义数字（幻数）或原义字符串，如\n`for (int i = 1; i < 7; i++)`。而是使用命名常数，如 `for (int i = 1; i < NUM_DAYS_IN_WEEK; i++)` 以便于维护和理解。\n\n### 大小写规则\n\n**大写**\n\n- 组织名缩写使用大写\n- 两个或者更少字母组成的标识符使用大写。例：\n\n```cs\nSystem.IO\nSystem.Web.UI\nSCB.Framework.UI\n```\n\n下表汇总了大写规则，并提供了不同类型的标识符的示例。\n\n<table>\n    <thead>\n        <tr>\n            <th>标识符</th>\n            <th>大小写</th>\n            <th>示例</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>类</td>\n            <td>Pascal</td>\n            <td>AppDomain</td>\n        </tr>\n        <tr>\n            <td>枚举类型</td>\n            <td>Pascal</td>\n            <td>ErrorLevel</td>\n        </tr>\n        <tr>\n            <td>枚举值</td>\n            <td>Pascal</td>\n            <td>FatalError</td>\n        </tr>\n        <tr>\n            <td>事件</td>\n            <td>Pascal</td>\n            <td>ValueChange</td>\n        </tr>\n        <tr>\n            <td>异常类</td>\n            <td>Pascal</td>\n            <td>WebException <br/>注意: 总是以 Exception 后缀结尾。</td>\n        </tr>\n        <tr>\n            <td>只读的静态字段</td>\n            <td>Pascal</td>\n            <td>RedValue</td>\n        </tr>\n        <tr>\n            <td>接口</td>\n            <td>Pascal</td>\n            <td>IDisposable <br/>注意: 总是以 I 前缀开始。</td>\n        </tr>\n        <tr>\n            <td>方法</td>\n            <td>Pascal</td>\n            <td>ToString</td>\n        </tr>\n        <tr>\n            <td>命名空间</td>\n            <td>Pascal</td>\n            <td>System.Drawing</td>\n        </tr>\n        <tr>\n            <td>属性</td>\n            <td>Pascal</td>\n            <td>BackColor</td>\n        </tr>\n        <tr>\n            <td>公共实例字段</td>\n            <td>Pascal</td>\n            <td>RedValue <br/>注意: 应优先使用属性。</td>\n        </tr>\n        <tr>\n            <td>受保护的实例字段</td>\n            <td>Camel</td>\n            <td>redValue <br/>注意: 应优先使用属性。</td>\n        </tr>\n        <tr>\n            <td>私有的实例字段</td>\n            <td>Camel</td>\n            <td>redValue</td>\n        </tr>\n        <tr>\n            <td>参数</td>\n            <td>Camel</td>\n            <td>typeName</td>\n        </tr>\n        <tr>\n            <td>方法内的变量</td>\n            <td>Camel</td>\n            <td>backColor</td>\n        </tr>\n    </tbody>\n</table>\n\n### 缩写\n\n为了避免混淆和保证跨语言交互操作，请遵循有关区缩写的使用的下列规则： \n\n- 不要将缩写或缩略形式用作标识符名称的组成部分。例如，使用 `GetWindow`，而不要使用 `GetWin`。 \n- 不要使用计算机领域中未被普遍接受的缩写。 \n- 在适当的时候，使用众所周知的缩写替换冗长的词组名称。例如，用 `UI` 作为 `User Interface` 缩\n写，用 `OLAP` 作为 `On-line Analytical Processing` 的缩写。 \n- 在使用缩写时，对于超过两个字符长度的缩写请使用 Pascal 大小写或 Camel 大小写。例如使用 `HtmlButton` 或 `HTMLButton`；但是，应当大写仅有两个字符的缩写，如：`System.IO`，而不是 `System.Io`。\n- 不要在标识符或参数名称中使用缩写。如果必须使用缩写，对于由多于两个字符所组成的缩写请使用Camel 大小写。\n\n### 命名空间\n\n- 命名命名空间时的一般性规则是使用公司名称，后跟技术名称和可选的功能与设计，如：\n\n`CompanyName.TechnologyName[.Feature][.Design]`\n\n例如：\n\n```cs\nnamespace SCB.SupplierChain  // 赛酷比公司的供应链系统\nnamespace SCB.SupplierChain.DataRules // 赛酷比公司的供应链系统的业务规则模块\n```\n\n- 命名空间使用Pascal大小写。\n- `TechnologyName` 指的是该项目的英文缩写或软件名。\n- 命名空间和类不能使用同样的名字。例如，有一个类被命名为`Debug`后，就不要再使用`Debug`作为一个名称空间名。\n \n### 类\n\n- 使用 Pascal 大小写。\n- 用名词或名词短语命名类。\n- 使用全称避免缩写，除非缩写已是一种公认的约定，如`URL`、`HTML`\n- 不要使用类型前缀，如在类名称上对类使用 C 前缀。例如，使用类名称 `FileStream`，而不是 \n`CFileStream`。\n- 不要使用下划线字符 (_)。\n- 有时候需要提供以字母 I 开始的类名称，虽然该类不是接口。只要 I 是作为类名称组成部分的整个单词的第一个字母，这便是适当的。例如，类名称 `IdentityStore` 是适当的。在适当的地方，使用复合单词命名派生的类。派生类名称的第二个部分应当是基类的名称。例如，`ApplicationException` 对于从名为 `Exception` 的类派生的类是适当的名称，原因`ApplicationException` 是一种`Exception`。请在应用该规则时进行合理的判断。例如，`Button` 对于从 `Control` 派生的类是适当的名称。尽管按钮是一种控件，但是将 `Control` 作为类名称的一部分将使名称不必要地加长。\n\n```cs\npublic class FileStream\npublic class Button\npublic class String\n```\n\n### 接口\n\n- 用名词或名词短语，或者描述行为的形容词命名接口。例：\n  - 接口名称 `IComponent` 使用描述性名词\n  - 接口名称 `ICustomAttributeProvider` 使用名词短语\n  - 接口名称 `IPersistable` 使用形容词。\n- 使用 Pascal 大小写。\n- 少用缩写。\n- 给接口名称加上字母 I 前缀，以指示该类型为接口。在定义类/接口对（其中类是接口的标准实现）时使用相似的名称。两个名称的区别应该只是接口名称上有字母 I 前缀。\n- 不要使用下划线字符 (_)。\n\n```cs\n public interface IServiceProvider\n public interface IFormatable\n```\n\n**以下代码示例阐释如何定义 IComponent 接口及其标准实现 Component 类。**\n\n```cs\npublic interface IComponent\n{\n    // Implementation code goes here.\n}\n\npublic class Component: IComponent \n{\n    // Implementation code goes here.\n}\n```\n\n### 属性类 (Attribute)\n\n应该总是将后缀 Attribute 添加到自定义属性类。例：\n\n```cs\npublic class ObsoleteAttribute\n{\n}\n```\n\n### 枚举 (Enum)\n\n枚举 (Enum) 值类型从 Enum 类继承。 \n\n- 对于 Enum 类型和值名称使用 Pascal 大小写。\n- 少用缩写。\n- 不要在 Enum 类型名称上使用 Enum 后缀。\n- 对大多数 Enum 类型使用单数名称，但是对作为位域的 Enum 类型使用复数名称。\n- 总是将 `FlagsAttribute` 添加到位域 Enum 类型。\n\n### 参数\n \n- 使用描述性参数名称。参数名称应当具有足够的描述性，以便参数的名称及其类型可用于在大多数情况下确定它的含义。\n- 对参数名称使用 Camel 大小写。\n- 使用描述参数的含义的名称，而不要使用描述参数的类型的名称。开发工具将提供有关参数的类型的有意义的信息。因此，通过描述意义，可以更好地使用参数的名称。\n- 不要给参数名称加匈牙利语类型表示法的前缀，仅在适合使用它们的地方使用它们。\n- 不要使用保留的参数。保留的参数是专用参数，如果需要，可以在未来的版本中公开它们。相反，如果在类库的未来版本中需要更多的数据，请为方法添加新的重载。\n\n```cs\nType GetType(string typeName)\nstring Format(string format, object args)\n```\n\n### 方法\n \n- 使用动词或动词短语命名方法。 \n- 使用 Pascal 大小写。\n\n```cs\nRemoveAll()\nGetCharArray()\nInvoke()\n```\n\n### 属性 (property)\n\n- 使用名词或名词短语命名属性。 \n- 使用 Pascal 大小写。 \n- 考虑用与属性的基础类型相同的名称创建属性。例如，如果声明名为 `Color` 的属性，则属\n性的类型同样应该是 Color。 \n\n```cs\npublic class SampleClass\n{\n    public Color BackColor \n    {\n        // Code for Get and Set accessors goes here.\n    }\n}\n```\n\n以下代码示例阐释提供其名称与类型相同的属性。\n\n```cs\npublic enum Color \n{\n    // Insert code for Enum here.\n}\n\npublic class Control\n{\n    public Color Color \n    { \n        get\n        {\n            // Insert code here.\n        }\n\n        set\n        {\n            // Insert code here.\n        } \n    }\n}\n```\n\n### 事件\n \n- 对事件处理程序名称使用 `EventHandler` 后缀。 \n- 指定两个名为 `sender` 和 `e` 的参数。`sender` 参数表示引发事件的对象。`sender` 参数始\n终是 `object` 类型的，即使在可以使用更为特定的类型时也如此。与事件相关联的状态封装\n在名为 `e` 的事件类的实例中。对 `e` 参数类型使用适当而特定的事件类。 \n- 用 `EventArgs` 后缀命名事件参数类。 \n- 考虑用动词命名事件。 \n- 使用动名词（动词的“ing”形式）创建表示事件前的概念的事件名称，用过去式表示事\n件后。例如，可以取消的 `Close` 事件应当具有 `Closing` 事件和 `Closed` 事件。不要使用\n`BeforeXxx/AfterXxx` 命名模式。 \n- 不要在类型的事件声明上使用前缀或者后缀。例如，使用 `Close`，而不要使用 `OnClose`。 \n- 通常情况下，对于可以在派生类中重写的事件，应在类型上提供一个受保护的方法（称为 \n`OnXxx`）。此方法只应具有事件参数 `e`，因为发送方总是类型的实例。 \n\n```cs\n\npublic delegate void MouseEventHandler(object sender, MouseEventArgs e);\n\npublic class MouseEventArgs : EventArgs \n{\n    int x;\n    int y;\n\n    public MouseEventArgs(int x, int y) \n    {\n        this.x = x;\n        this.y = y; \n    }\n\n    public int X\n    {\n        get\n        {\n            return x;\n        }\n    }\n\n    public int Y\n    {\n        get\n        {\n            return y;\n        }\n    }\n}\n```\n\n### 常量 (const)\n \n所有单词大写，多个单词之间用 \"_\" 隔开。 如：\n\n`public const string PAGE_TITLE = \"Welcome\";`\n\n### 字段\n \n- private、protected 使用 Camel 大小写。\n- public 使用 Pascal 大小写。\n- 拼写出字段名称中使用的所有单词。仅在开发人员一般都能理解时使用缩写。\n\n```cs\nclass SampleClass\n{\n    string url;\n    string destinationUrl;\n}\n```\n\n- 不要对字段名使用匈牙利语表示法。好的名称描述语义，而非类型。\n- 不要对字段名或静态字段名应用前缀。具体说来，不要对字段名称应用前缀来区分静态和非静态字段。例如，应用 `g_` 或 `s_` 前缀是不正确的。\n- 对预定义对象实例使用公共静态只读字段。如果存在对象的预定义实例，则将它们声明为\n对象本身的公共静态只读字段。使用 Pascal 大小写，原因是字段是公共的。\n\n```cs\npublic struct Color\n{\n    public static readonly Color Red = new Color(0x0000FF);\n\n    public Color(int rgb)\n    {\n        // Insert code here.\n    }\n\n    public Color(byte r, byte g, byte b)\n    {\n        // Insert code here.\n    }\n\n    public byte RedValue \n    {\n        get\n        {\n            return Color;\n        }\n    }\n}\n```\n\n### 静态字段\n \n- 使用名词、名词短语或者名词的缩写命名静态字段。\n- 使用 Pascal 大小写。\n- 建议尽可能使用静态属性而不是公共静态字段。\n\n### 集合\n\n集合是一组组合在一起的类似的类型化对象，如哈希表、查询、堆栈、字典和列表，集合的命名建议用复数。\n\n### 措词\n\n避免使用与常用的 .NET 框架命名空间重复的类名称。例如，不要将以下任何名称用作类名称：System、Collections、Forms 或 UI。有关 .NET 框架命名空间的列表，请参阅类库。\n\n另外，避免使用与C#语言关键字冲突的标识符。\n\n## 语句\n\n### 每行一个语句\n\n每行最多包含一个语句。如：\n\n```cs\na++; // 推荐\nb--; // 推荐\na++; b--; // 不推荐\n```\n\n### 复合语句\n\n复合语句是指包含\"父语句{子语句;子语句;}\"的语句，使用复合语句应遵循以下几点\n\n- 子语句要缩进。\n- 左花括号“{” 在复合语句父语句的下一行并与之对齐，单独成行。\n- 即使只有一条子语句要不要省略花括号“ {}”。 如：\n\n```cs\nwhile(d += s++)\n{\n    n++;\n}\n```\n\n### return 语句\n\nreturn语句中不使用括号，除非它能使返回值更加清晰。如：\n\n```cs\nreturn;\nreturn myDisk.size();\nreturn (size ? size : defaultSize);\n```\n\n### if、 if-else、if else-if 语句\n \nif、 if-else、if else-if 语句使用格式\n\n```cs\nif (condition)\n{\n    statements;\n}\n\nif (condition)\n{\n    statements;\n}\nelse\n{\n    statements;\n}\n\nif (condition)\n{\n    statements;\n}\nelse if (condition)\n{\n    statements;\n}\nelse\n{\n    statements;\n}\n```\n\n### for、foreach 语句\n\n**for 语句使用格式**\n\n```cs\nfor (initialization; condition; update)\n{\n    statements;\n}\n```\n\n**空的 for 语句**（所有的操作都在`initialization`、`condition` 或 `update`中实现）使用格式\n\n`for (initialization; condition; update); // update user id`\n\n**foreach 语句使用格式**\n\n```cs\nforeach (object obj in array)\n{\n    statements;\n}\n```\n\n*注意*\n\n- 在循环过程中不要修改循环计数器。\n- 对每个空循环体给出确认性注释。\n\n### while 语句\n\n**while 语句使用格式**\n\n```cs\nwhile (condition)\n{\n    statements;\n}\n```\n\n**空的 while 语句使用格式**\n\n`while (condition);`\n \n### do - while 语句\n\ndo - while 语句使用格式\n\n```cs\ndo\n{\n    statements;\n} while (condition);\n```\n\n### switch - case 语句\n\nswitch - case语句使用格式\n\n```cs\nswitch (condition)\n{\n    case 1:\n        statements;\n        break;\n\n    case 2:\n        statements;\n        break;\n\n    default:\n        statements;\n        break;\n}\n```\n\n*注意：*\n\n- 语句switch中的每个case各占一行。\n- 为所有switch语句提供default分支。 \n- 所有的非空 case 语句必须用 break; 语句结束。\n\n### try - catch 语句\n\ntry - catch语句使用格式\n\n```cs\ntry\n{\n    statements;\n}\ncatch (ExceptionClass e)\n{\n    statements;\n}\nfinally\n{\n    statements;\n}\n```\n\n### using 块语句\n\nusing 块语句使用格式\n\n```cs\nusing (object)\n{\n    statements;\n}\n```\n\n## 控件命名规则\n\n### 命名方法\n\n控件名简写+英文描述，英文描述首字母大写\n\n### 主要控件名简写对照表\n\n- 控件名 => 简写\n- Label => lbl\n- TextBox => txt\n- Button => btn\n- LinkButton => lnkbtn\n- ImageButton => imgbtn\n- DropDownList => ddl\n- ListBox => lst\n- DataGrid => dg\n- DataList => dl\n- CheckBox => chk\n- CheckBoxList => chkls\n- RadioButton => rdo\n- RadioButtonList => rdolt\n- Image => img\n- Panel => pnl\n- Calender => cld\n- AdRotator => ar\n- Table => tbl\n- RequiredFieldValidator => rfv\n- CompareValidator => cv\n- RangeValidator => rv\n- RegularExpressionValidator => rev\n- ValidatorSummary => vs\n- CrystalReportViewer => rptvew\n\n## 其他\n\n### 表达式\n\n- 避免在表达式中用赋值语句\n- 避免对浮点类型做等于或不等于判断\n\n### 类型转换\n\n- 尽量避免强制类型转换。\n- 如果不得不做类型转换，尽量用显式方式。\n","source":"_posts/C#编码规范.md","raw":"---\ntitle: C#编码规范\ndate: 2016-01-26 12:52:00\ntags:\n- C#\n- 编码规范\n- Coding\n---\n## 概述\n\n### 规范制定原则\n\n* 方便代码的交流和维护。\n* 不影响编码的效率，不与大众习惯冲突。\n* 使代码更美观、阅读更方便。\n* 使代码的逻辑更清晰、更易于理解。\n\n### 术语定义\n\n**Pascal 大小写**\n\n将标识符的首字母和后面连接的每个单词的首字母都大写。可以对三字符或更多字符的标识符使用Pascal 大小写。例：\n\n`BackColor`\n\n**Camel 大小写**\n\n标识符的首字母小写，而每个后面连接的单词的首字母都大写。例：\n\n`backColor`\n\n**匈牙利命名法**\n\n匈牙利命名法是一名匈牙利程序员发明的，而且他在微软工作了多年。此命名法就是通过微软的各种产品和文档传出来的。多数有经验的程序员，不管他们用的是哪门儿语言，都或多或少在使用它。\n\n这种命名法的基本原则是：\n\n> 变量名＝属性＋类型＋对象描述\n\n即一个变量名是由三部分信息组成，这样，程序员很容易理解变量的类型、用途，而且便于记忆。\n\n下边是一些推荐使用的规则例子，你可以挑选使用，也可以根据个人喜好作些修改再用之。\n\n - 属性部分：\n  - 全局变量： g_\n  - 常量 ： c_\n  - 类成员变量： m_\n\n - 类型部分：\n  - 指针： p\n  - 句柄： h\n  - 布尔型： b\n  - 浮点型： f\n  - 无符号： u\n\n - 描述部分：\n  - 初始化： Init\n  - 临时变量： Tmp\n  - 目的对象： Dst\n  - 源对象： Src\n  - 窗口： Wnd\n\n下边举例说明：\n\n- hwnd： h表示句柄，wnd表示窗口，合起来为“窗口句柄”。\n- m_bFlag： m表示成员变量，b表示布尔，合起来为：“某个类的成员变量，布尔型，是一个状态标志”。\n\n## 代码外观\n\n### 列宽\n\n代码列宽控制在120字符左右。\n\n### 换行\n\n当表达式超出或即将超出规定的列宽，遵循以下规则进行换行\n\n- 在逗号后换行。\n- 在操作符前换行。\n- 规则1优先于规则2。\n\n当以上规则会导致代码混乱的时候自己采取更灵活的换行规则。\n\n### 缩进 \n\n缩进应该是每行一个Tab(4个空格)，不要在代码中使用Tab字符。\n\nVisual Studio 设置：工具->选项->文本编辑器->C#->制表符->插入空格，制表符大小=4，缩进大小=4\n\n### 空行\n\n空行是为了将逻辑上相关联的代码分块，以便提高代码的可阅读性。\n\n**在以下情况下使用两个空行**\n\n- 接口和类的定义之间。\n- 枚举和类的定义之间。\n- 类与类的定义之间。\n\n**在以下情况下使用一个空行**\n\n- 方法与方法、属性与属性之间。\n- 方法中变量声明与语句之间。\n- 方法与方法之间。\n- 方法中不同的逻辑块之间。\n- 方法中的返回语句与其他的语句之间。\n- 属性与方法、属性与字段、方法与字段之间。\n- 注释与它注释的语句间不空行，但与其他的语句间空一行。\n\n### 空格\n\n**在以下情况中要使用到空格**\n\n- 关键字和左括符 “(” 应该用空格隔开。如：\n\n`while (true)`\n\n注意在方法名和左括符 “(” 之间不要使用空格，这样有助于辨认代码中的方法调用与关键字。\n\n- 多个参数用逗号隔开，每个逗号后都应加一个空格。\n- 除了 . 之外，所有的二元操作符都应用空格与它们的操作数隔开。一元操作符、++及--与操作数间不需要空格。如：\n\n```cs\na += c + d;\na = (a + b)/(c*d);\n\nwhile (d++ == s++)\n{\n    n++;\n}\n\nPrintSize(\"size is \" + size + \"\\n\");\n```\n\n- 语句中的表达式之间用空格隔开。如：\n\n` for (expr1; expr2; expr3) `\n\n### 括号 - ()\n\n- 左括号“(”不要紧靠关键字，中间用一个空格隔开。\n- 左括号“(”与方法名之间不要添加任何空格。\n- 没有必要的话不要在返回语句中使用()。\n\n### 花括号 - {}\n\n- 左花括号 “{” 放于关键字或方法名的下一行并与之对齐。如：\n\n```cs\nif (condition)\n{\n}\n\npublic int Add(int x, int y)\n{\n}\n```\n\n- 左花括号 “{” 要与相应的右花括号 “}”对齐。\n- 通常情况下左花括号 “{”单独成行，不与任何语句并列一行。\n- if、while、do语句后一定要使用{}，即使{}号中为空或只有一条语句。如：\n\n```cs\nif (somevalue == 1)\n{\n    somevalue = 2;\n}\n```\n\n- 右花括号 “}” 后建议加一个注释以便于方便的找到与之相应的 {。如:\n\n```cs\nwhile(1)\n{\n    if(valid)\n    {\n    } // if valid\n    else\n    {\n    } // not valid\n} // end forever\n```\n\n## 程序注释\n\n### 注释概述\n\n- 修改代码时，总是使代码周围的注释保持最新。\n- 在每个例程的开始，提供标准的注释样本以指示例程的用途、假设和限制很有帮助。注释样本应该是解释它为什么存在和可以做什么的简短介绍.\n- 避免在代码行的末尾添加注释；行尾注释使代码更难阅读。不过在批注变量声明时，行尾注释是合适的；在这种情况下，将所有行尾注释在公共制表位处对齐。 \n- 避免杂乱的注释，如一整行星号。而是应该使用空白将注释同代码分开。 \n- 避免在块注释的周围加上印刷框。这样看起来可能很漂亮，但是难于维护。\n- 在部署发布之前，移除所有临时或无关的注释，以避免在日后的维护工作中产生混乱。\n- 如果需要用注释来解释复杂的代码节，请检查此代码以确定是否应该重写它。尽一切可能不注释难以理解的代码，而应该重写它。尽管一般不应该为了使代码更简单以便于人们使用而牺牲性能，但必须保持性能和可维护性之间的平衡。\n- 在编写代码时就注释，因为以后很可能没有时间这样做。另外，如果有机会复查已编写的代码，在今天看来很明显的东西六周以后或许就不明显了。\n- 避免多余的或不适当的注释，不应包含个人情绪内容，如幽默的不主要的备注。\n- 在编写注释时使用完整的句子。注释应该阐明代码，而不应该增加多义性。 \n- 使用注释来解释代码的意图。它们不应作为代码的联机翻译。 \n- 注释代码中不十分明显的内容。\n- 为了防止问题反复出现，对错误修复和解决方法代码总是使用注释。\n- 对由循环和逻辑分支组成的代码使用注释。这些是帮助源代码读者的主要方面。 \n- 在整个应用程序中，使用具有一致的标点和结构的统一样式来构造注释。 \n- 用空白将注释同注释分隔符分开。在没有颜色提示的情况下查看注释时，这样做会使注释很明显且容易被找到。\n- 代码修改变更记录不应使用注释标明修改日期和修改人，注释应只针对代码不记录版本，代码版本应该使用代码版本系统进行管理\n- 为了使层次清晰，在闭合的右花括号后注释该闭合所对应的起点。\n\n```cs\nnamespace SCB.Framework.Web \n{\n} // namespace SCB.Framework.Web\n```\n\n### 文档型注释\n\n该类注释采用.Net已定义好的Xml标签来标记，在声明接口、类、方法、属性、字段都应该使用该类注释，以便代码完成后直接生成代码文档，让别人更好的了解代码的实现和接口。如\n\n```cs\n/// <summary> MyMethod is a method in the MyClass class.\n/// <para> Here's how you could make a second paragraph in a description.\n/// <see cref=\"System.Console.WriteLine\"/> \n/// for information about output statements.\n/// </para>\n/// <seealso cref=\"MyClass.Main\"/>\n/// </summary>\npublic static void MyMethod(int Int1)\n{\n}\n```\n\n注释标签的使用请参考:[http://msdn.microsoft.com/zh-cn/library/5ast78ax.aspx](http://msdn.microsoft.com/zh-cn/library/5ast78ax.aspx \"Microsoft Recommended Tags for Documentation Comments (C# Programming Guide)\")\n\n### 类c注释\n\n该类注释用于\n\n- 复杂程序逻辑说明与技术事项\n\n**用法**\n\n```cs\n/*\n动态路由算法使用Round-robin算法，原理是...\n*/\n```\n\n### 单行注释\n\n该类注释用于\n\n- 方法内的代码注释。如变量的声明、代码或代码段的解释。例：\n\n```cs\n//\n// 注释语句\n// \nprivate int number;\n\n或\n\n// 注释语句\nprivate int number;\n```\n \n- 方法内变量的声明或花括号后的注释, 例：\n\n```cs\nif (1 == 1) // always true\n{\n    statement; \n} // always true\n```\n\n## 声明\n\n### 每行声明数\n\n一行只建议作一个声明，并按字母顺序排列。如：\n\n```cs\nint level; // 推荐\nint size; // 推荐\nint x, y; // 不推荐\n```\n\n### 初始化\n\n建议在变量声明时就对其做初始化。\n\n### 位置\n\n变量建议置于块的开始处，不要总是在第一次使用它们的地方做声明。如：\n\n```cs\nvoid MyMethod()\n{\n    int int1 = 0;\n\n    if (condition)\n    {\n        int int2 = 0;\n        ...\n    }\n}\n```\n\n**例外情况**\n\n```cs\nfor (int i = 0; i < maxLoops; i++)\n{\n    ...\n}\n```\n\n**应避免不同层次间的变量重名**，如：\n\n```cs\nint count;\n...\n\nvoid MyMethod()\n{\n    if (condition)\n    {\n        int count = 0; // 避免\n        ...\n    }\n    ...\n}\n```\n\n### 类和接口的声明\n\n- 在方法名与其后的左括号间没有任何空格。\n- 左花括号 “{” 出现在声明的下行并与之对齐，单独成行。\n- 方法间用一个空行隔开。\n\n### 字段的声明\n\n不要使用是 public 或 protected 的实例字段。如果避免将字段直接公开给开发人员，可以更轻松地对类进行版本控制，原因是在维护二进制兼容性时字段不能被更改为属性。考虑为字段提供 get 和set 属性访问器，而不是使它们成为公共的。 get 和 set 属性访问器中可执行代码的存在使得可以进行后续改进，如在使用属性或者得到属性更改通知时根据需要创建对象。下面的代码示例阐释带有 get 和 set 属性访问器的私有实例字段的正确使用。例：\n\n```cs\npublic class Control: Component\n{\n    private int handle;\n\n    public int Handle\n    {\n        get\n        {\n            return handle; \n        }\n    }\n}\n```\n\n## 命名规范\n\n### 命名概述\n\n> 名称应该说明“什么”而不是“如何”。通过避免使用公开基础实现（它们会发生改变）的名称，可以保留简化复杂性的抽象层。例如，可以使用 `GetNextStudent()`，而不是 `GetNextArrayElement`()。 \n\n**命名原则是：**\n\n> 选择正确名称时的困难可能表明需要进一步分析或定义项的目的。使名称足够长以便有一定的意义，并且足够短以避免冗长。唯一名称在编程上仅用于将各项区分开。表现力强的名称是为了帮助人们阅读；因此，提供人们可以理解的名称是有意义的。不过，请确保选择的名称符合适用语言的规则和标准。\n\n**以下几点是推荐的命名方法：**\n\n- 避免容易被主观解释的难懂的名称，如方面名 `AnalyzeThis()`，或者属性名 `xxK8`。这样的名称会导致多义性。\n- 在类属性的名称中包含类名是多余的，如 `Book.BookTitle`。而是应该使用 `Book.Title`。\n- 只要合适，在变量名的末尾或开头加计算限定符`（Avg、Sum、Min、Max、Index）`。\n- 在变量名中使用互补对，如 `min/max、begin/end` 和 `open/close`。 \n- 布尔变量名应该包含 `Is`，这意味着 `Yes/No` 或 `True/False` 值，如 `fileIsFound`。\n- 在命名状态变量时，避免使用诸如 `Flag` 的术语。状态变量不同于布尔变量的地方是它可以具有两个以上的可能值。不是使用 `documentFlag`，而是使用更具描述性的名称，如 `documentFormatType`。\n- 即使对于可能仅出现在几个代码行中的生存期很短的变量，仍然使用有意义的名称。仅对于短循环索引使用单字母变量名，如 i 或 j。 可能的情况下，尽量不要使用原义数字（幻数）或原义字符串，如\n`for (int i = 1; i < 7; i++)`。而是使用命名常数，如 `for (int i = 1; i < NUM_DAYS_IN_WEEK; i++)` 以便于维护和理解。\n\n### 大小写规则\n\n**大写**\n\n- 组织名缩写使用大写\n- 两个或者更少字母组成的标识符使用大写。例：\n\n```cs\nSystem.IO\nSystem.Web.UI\nSCB.Framework.UI\n```\n\n下表汇总了大写规则，并提供了不同类型的标识符的示例。\n\n<table>\n    <thead>\n        <tr>\n            <th>标识符</th>\n            <th>大小写</th>\n            <th>示例</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>类</td>\n            <td>Pascal</td>\n            <td>AppDomain</td>\n        </tr>\n        <tr>\n            <td>枚举类型</td>\n            <td>Pascal</td>\n            <td>ErrorLevel</td>\n        </tr>\n        <tr>\n            <td>枚举值</td>\n            <td>Pascal</td>\n            <td>FatalError</td>\n        </tr>\n        <tr>\n            <td>事件</td>\n            <td>Pascal</td>\n            <td>ValueChange</td>\n        </tr>\n        <tr>\n            <td>异常类</td>\n            <td>Pascal</td>\n            <td>WebException <br/>注意: 总是以 Exception 后缀结尾。</td>\n        </tr>\n        <tr>\n            <td>只读的静态字段</td>\n            <td>Pascal</td>\n            <td>RedValue</td>\n        </tr>\n        <tr>\n            <td>接口</td>\n            <td>Pascal</td>\n            <td>IDisposable <br/>注意: 总是以 I 前缀开始。</td>\n        </tr>\n        <tr>\n            <td>方法</td>\n            <td>Pascal</td>\n            <td>ToString</td>\n        </tr>\n        <tr>\n            <td>命名空间</td>\n            <td>Pascal</td>\n            <td>System.Drawing</td>\n        </tr>\n        <tr>\n            <td>属性</td>\n            <td>Pascal</td>\n            <td>BackColor</td>\n        </tr>\n        <tr>\n            <td>公共实例字段</td>\n            <td>Pascal</td>\n            <td>RedValue <br/>注意: 应优先使用属性。</td>\n        </tr>\n        <tr>\n            <td>受保护的实例字段</td>\n            <td>Camel</td>\n            <td>redValue <br/>注意: 应优先使用属性。</td>\n        </tr>\n        <tr>\n            <td>私有的实例字段</td>\n            <td>Camel</td>\n            <td>redValue</td>\n        </tr>\n        <tr>\n            <td>参数</td>\n            <td>Camel</td>\n            <td>typeName</td>\n        </tr>\n        <tr>\n            <td>方法内的变量</td>\n            <td>Camel</td>\n            <td>backColor</td>\n        </tr>\n    </tbody>\n</table>\n\n### 缩写\n\n为了避免混淆和保证跨语言交互操作，请遵循有关区缩写的使用的下列规则： \n\n- 不要将缩写或缩略形式用作标识符名称的组成部分。例如，使用 `GetWindow`，而不要使用 `GetWin`。 \n- 不要使用计算机领域中未被普遍接受的缩写。 \n- 在适当的时候，使用众所周知的缩写替换冗长的词组名称。例如，用 `UI` 作为 `User Interface` 缩\n写，用 `OLAP` 作为 `On-line Analytical Processing` 的缩写。 \n- 在使用缩写时，对于超过两个字符长度的缩写请使用 Pascal 大小写或 Camel 大小写。例如使用 `HtmlButton` 或 `HTMLButton`；但是，应当大写仅有两个字符的缩写，如：`System.IO`，而不是 `System.Io`。\n- 不要在标识符或参数名称中使用缩写。如果必须使用缩写，对于由多于两个字符所组成的缩写请使用Camel 大小写。\n\n### 命名空间\n\n- 命名命名空间时的一般性规则是使用公司名称，后跟技术名称和可选的功能与设计，如：\n\n`CompanyName.TechnologyName[.Feature][.Design]`\n\n例如：\n\n```cs\nnamespace SCB.SupplierChain  // 赛酷比公司的供应链系统\nnamespace SCB.SupplierChain.DataRules // 赛酷比公司的供应链系统的业务规则模块\n```\n\n- 命名空间使用Pascal大小写。\n- `TechnologyName` 指的是该项目的英文缩写或软件名。\n- 命名空间和类不能使用同样的名字。例如，有一个类被命名为`Debug`后，就不要再使用`Debug`作为一个名称空间名。\n \n### 类\n\n- 使用 Pascal 大小写。\n- 用名词或名词短语命名类。\n- 使用全称避免缩写，除非缩写已是一种公认的约定，如`URL`、`HTML`\n- 不要使用类型前缀，如在类名称上对类使用 C 前缀。例如，使用类名称 `FileStream`，而不是 \n`CFileStream`。\n- 不要使用下划线字符 (_)。\n- 有时候需要提供以字母 I 开始的类名称，虽然该类不是接口。只要 I 是作为类名称组成部分的整个单词的第一个字母，这便是适当的。例如，类名称 `IdentityStore` 是适当的。在适当的地方，使用复合单词命名派生的类。派生类名称的第二个部分应当是基类的名称。例如，`ApplicationException` 对于从名为 `Exception` 的类派生的类是适当的名称，原因`ApplicationException` 是一种`Exception`。请在应用该规则时进行合理的判断。例如，`Button` 对于从 `Control` 派生的类是适当的名称。尽管按钮是一种控件，但是将 `Control` 作为类名称的一部分将使名称不必要地加长。\n\n```cs\npublic class FileStream\npublic class Button\npublic class String\n```\n\n### 接口\n\n- 用名词或名词短语，或者描述行为的形容词命名接口。例：\n  - 接口名称 `IComponent` 使用描述性名词\n  - 接口名称 `ICustomAttributeProvider` 使用名词短语\n  - 接口名称 `IPersistable` 使用形容词。\n- 使用 Pascal 大小写。\n- 少用缩写。\n- 给接口名称加上字母 I 前缀，以指示该类型为接口。在定义类/接口对（其中类是接口的标准实现）时使用相似的名称。两个名称的区别应该只是接口名称上有字母 I 前缀。\n- 不要使用下划线字符 (_)。\n\n```cs\n public interface IServiceProvider\n public interface IFormatable\n```\n\n**以下代码示例阐释如何定义 IComponent 接口及其标准实现 Component 类。**\n\n```cs\npublic interface IComponent\n{\n    // Implementation code goes here.\n}\n\npublic class Component: IComponent \n{\n    // Implementation code goes here.\n}\n```\n\n### 属性类 (Attribute)\n\n应该总是将后缀 Attribute 添加到自定义属性类。例：\n\n```cs\npublic class ObsoleteAttribute\n{\n}\n```\n\n### 枚举 (Enum)\n\n枚举 (Enum) 值类型从 Enum 类继承。 \n\n- 对于 Enum 类型和值名称使用 Pascal 大小写。\n- 少用缩写。\n- 不要在 Enum 类型名称上使用 Enum 后缀。\n- 对大多数 Enum 类型使用单数名称，但是对作为位域的 Enum 类型使用复数名称。\n- 总是将 `FlagsAttribute` 添加到位域 Enum 类型。\n\n### 参数\n \n- 使用描述性参数名称。参数名称应当具有足够的描述性，以便参数的名称及其类型可用于在大多数情况下确定它的含义。\n- 对参数名称使用 Camel 大小写。\n- 使用描述参数的含义的名称，而不要使用描述参数的类型的名称。开发工具将提供有关参数的类型的有意义的信息。因此，通过描述意义，可以更好地使用参数的名称。\n- 不要给参数名称加匈牙利语类型表示法的前缀，仅在适合使用它们的地方使用它们。\n- 不要使用保留的参数。保留的参数是专用参数，如果需要，可以在未来的版本中公开它们。相反，如果在类库的未来版本中需要更多的数据，请为方法添加新的重载。\n\n```cs\nType GetType(string typeName)\nstring Format(string format, object args)\n```\n\n### 方法\n \n- 使用动词或动词短语命名方法。 \n- 使用 Pascal 大小写。\n\n```cs\nRemoveAll()\nGetCharArray()\nInvoke()\n```\n\n### 属性 (property)\n\n- 使用名词或名词短语命名属性。 \n- 使用 Pascal 大小写。 \n- 考虑用与属性的基础类型相同的名称创建属性。例如，如果声明名为 `Color` 的属性，则属\n性的类型同样应该是 Color。 \n\n```cs\npublic class SampleClass\n{\n    public Color BackColor \n    {\n        // Code for Get and Set accessors goes here.\n    }\n}\n```\n\n以下代码示例阐释提供其名称与类型相同的属性。\n\n```cs\npublic enum Color \n{\n    // Insert code for Enum here.\n}\n\npublic class Control\n{\n    public Color Color \n    { \n        get\n        {\n            // Insert code here.\n        }\n\n        set\n        {\n            // Insert code here.\n        } \n    }\n}\n```\n\n### 事件\n \n- 对事件处理程序名称使用 `EventHandler` 后缀。 \n- 指定两个名为 `sender` 和 `e` 的参数。`sender` 参数表示引发事件的对象。`sender` 参数始\n终是 `object` 类型的，即使在可以使用更为特定的类型时也如此。与事件相关联的状态封装\n在名为 `e` 的事件类的实例中。对 `e` 参数类型使用适当而特定的事件类。 \n- 用 `EventArgs` 后缀命名事件参数类。 \n- 考虑用动词命名事件。 \n- 使用动名词（动词的“ing”形式）创建表示事件前的概念的事件名称，用过去式表示事\n件后。例如，可以取消的 `Close` 事件应当具有 `Closing` 事件和 `Closed` 事件。不要使用\n`BeforeXxx/AfterXxx` 命名模式。 \n- 不要在类型的事件声明上使用前缀或者后缀。例如，使用 `Close`，而不要使用 `OnClose`。 \n- 通常情况下，对于可以在派生类中重写的事件，应在类型上提供一个受保护的方法（称为 \n`OnXxx`）。此方法只应具有事件参数 `e`，因为发送方总是类型的实例。 \n\n```cs\n\npublic delegate void MouseEventHandler(object sender, MouseEventArgs e);\n\npublic class MouseEventArgs : EventArgs \n{\n    int x;\n    int y;\n\n    public MouseEventArgs(int x, int y) \n    {\n        this.x = x;\n        this.y = y; \n    }\n\n    public int X\n    {\n        get\n        {\n            return x;\n        }\n    }\n\n    public int Y\n    {\n        get\n        {\n            return y;\n        }\n    }\n}\n```\n\n### 常量 (const)\n \n所有单词大写，多个单词之间用 \"_\" 隔开。 如：\n\n`public const string PAGE_TITLE = \"Welcome\";`\n\n### 字段\n \n- private、protected 使用 Camel 大小写。\n- public 使用 Pascal 大小写。\n- 拼写出字段名称中使用的所有单词。仅在开发人员一般都能理解时使用缩写。\n\n```cs\nclass SampleClass\n{\n    string url;\n    string destinationUrl;\n}\n```\n\n- 不要对字段名使用匈牙利语表示法。好的名称描述语义，而非类型。\n- 不要对字段名或静态字段名应用前缀。具体说来，不要对字段名称应用前缀来区分静态和非静态字段。例如，应用 `g_` 或 `s_` 前缀是不正确的。\n- 对预定义对象实例使用公共静态只读字段。如果存在对象的预定义实例，则将它们声明为\n对象本身的公共静态只读字段。使用 Pascal 大小写，原因是字段是公共的。\n\n```cs\npublic struct Color\n{\n    public static readonly Color Red = new Color(0x0000FF);\n\n    public Color(int rgb)\n    {\n        // Insert code here.\n    }\n\n    public Color(byte r, byte g, byte b)\n    {\n        // Insert code here.\n    }\n\n    public byte RedValue \n    {\n        get\n        {\n            return Color;\n        }\n    }\n}\n```\n\n### 静态字段\n \n- 使用名词、名词短语或者名词的缩写命名静态字段。\n- 使用 Pascal 大小写。\n- 建议尽可能使用静态属性而不是公共静态字段。\n\n### 集合\n\n集合是一组组合在一起的类似的类型化对象，如哈希表、查询、堆栈、字典和列表，集合的命名建议用复数。\n\n### 措词\n\n避免使用与常用的 .NET 框架命名空间重复的类名称。例如，不要将以下任何名称用作类名称：System、Collections、Forms 或 UI。有关 .NET 框架命名空间的列表，请参阅类库。\n\n另外，避免使用与C#语言关键字冲突的标识符。\n\n## 语句\n\n### 每行一个语句\n\n每行最多包含一个语句。如：\n\n```cs\na++; // 推荐\nb--; // 推荐\na++; b--; // 不推荐\n```\n\n### 复合语句\n\n复合语句是指包含\"父语句{子语句;子语句;}\"的语句，使用复合语句应遵循以下几点\n\n- 子语句要缩进。\n- 左花括号“{” 在复合语句父语句的下一行并与之对齐，单独成行。\n- 即使只有一条子语句要不要省略花括号“ {}”。 如：\n\n```cs\nwhile(d += s++)\n{\n    n++;\n}\n```\n\n### return 语句\n\nreturn语句中不使用括号，除非它能使返回值更加清晰。如：\n\n```cs\nreturn;\nreturn myDisk.size();\nreturn (size ? size : defaultSize);\n```\n\n### if、 if-else、if else-if 语句\n \nif、 if-else、if else-if 语句使用格式\n\n```cs\nif (condition)\n{\n    statements;\n}\n\nif (condition)\n{\n    statements;\n}\nelse\n{\n    statements;\n}\n\nif (condition)\n{\n    statements;\n}\nelse if (condition)\n{\n    statements;\n}\nelse\n{\n    statements;\n}\n```\n\n### for、foreach 语句\n\n**for 语句使用格式**\n\n```cs\nfor (initialization; condition; update)\n{\n    statements;\n}\n```\n\n**空的 for 语句**（所有的操作都在`initialization`、`condition` 或 `update`中实现）使用格式\n\n`for (initialization; condition; update); // update user id`\n\n**foreach 语句使用格式**\n\n```cs\nforeach (object obj in array)\n{\n    statements;\n}\n```\n\n*注意*\n\n- 在循环过程中不要修改循环计数器。\n- 对每个空循环体给出确认性注释。\n\n### while 语句\n\n**while 语句使用格式**\n\n```cs\nwhile (condition)\n{\n    statements;\n}\n```\n\n**空的 while 语句使用格式**\n\n`while (condition);`\n \n### do - while 语句\n\ndo - while 语句使用格式\n\n```cs\ndo\n{\n    statements;\n} while (condition);\n```\n\n### switch - case 语句\n\nswitch - case语句使用格式\n\n```cs\nswitch (condition)\n{\n    case 1:\n        statements;\n        break;\n\n    case 2:\n        statements;\n        break;\n\n    default:\n        statements;\n        break;\n}\n```\n\n*注意：*\n\n- 语句switch中的每个case各占一行。\n- 为所有switch语句提供default分支。 \n- 所有的非空 case 语句必须用 break; 语句结束。\n\n### try - catch 语句\n\ntry - catch语句使用格式\n\n```cs\ntry\n{\n    statements;\n}\ncatch (ExceptionClass e)\n{\n    statements;\n}\nfinally\n{\n    statements;\n}\n```\n\n### using 块语句\n\nusing 块语句使用格式\n\n```cs\nusing (object)\n{\n    statements;\n}\n```\n\n## 控件命名规则\n\n### 命名方法\n\n控件名简写+英文描述，英文描述首字母大写\n\n### 主要控件名简写对照表\n\n- 控件名 => 简写\n- Label => lbl\n- TextBox => txt\n- Button => btn\n- LinkButton => lnkbtn\n- ImageButton => imgbtn\n- DropDownList => ddl\n- ListBox => lst\n- DataGrid => dg\n- DataList => dl\n- CheckBox => chk\n- CheckBoxList => chkls\n- RadioButton => rdo\n- RadioButtonList => rdolt\n- Image => img\n- Panel => pnl\n- Calender => cld\n- AdRotator => ar\n- Table => tbl\n- RequiredFieldValidator => rfv\n- CompareValidator => cv\n- RangeValidator => rv\n- RegularExpressionValidator => rev\n- ValidatorSummary => vs\n- CrystalReportViewer => rptvew\n\n## 其他\n\n### 表达式\n\n- 避免在表达式中用赋值语句\n- 避免对浮点类型做等于或不等于判断\n\n### 类型转换\n\n- 尽量避免强制类型转换。\n- 如果不得不做类型转换，尽量用显式方式。\n","slug":"C#编码规范","published":1,"updated":"2016-01-26T04:53:04.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxiu0000snsuu5m2mit8"},{"title":"钉钉API内置图标","date":"2016-01-26T06:25:57.000Z","_content":"## Icon索引值对应的图片\n每个icon上方的字符串就是对应icon的索引\n通过设置相关索引，可以为按钮设置图标\n<table style=\"background:black;color:white;\">\n<tr>\n    <td> trash ![](/images/TB1U10ZLXXXXXbTXVXXXXXXXXXX-40-40.png)</td>\n    <td> time ![](/images/TB1Mbh3LXXXXXXAXVXXXXXXXXXX-40-40.png)</td>\n    <td> setting ![](/images/TB1Cz4YLXXXXXcKXVXXXXXXXXXX-40-40.png)</td>\n    <td> send ![](/images/TB1e9d0LXXXXXbkXVXXXXXXXXXX-48-48.png)</td>\n</tr>\n<tr>\n    <td> scan ![](/images/TB1Tfd8LXXXXXbDXFXXXXXXXXXX-40-40.png)</td>\n    <td> reply ![](/images/TB1p09nLXXXXXXAXXXXXXXXXXXX-48-48.png)</td>\n    <td> photo ![](/images/TB1KdqaLXXXXXXgXFXXXXXXXXXX-40-40.png)</td>\n    <td> personal ![](/images/TB1w81gLXXXXXXDXpXXXXXXXXXX-40-40.png)</td>\n</tr>\n<tr>\n    <td> org ![](/images/TB1BEpYLXXXXXcdXVXXXXXXXXXX-48-48.png)</td>\n    <td> ok  ![](/images/TB1Qkt.LXXXXXakXFXXXXXXXXXX-48-48.png)</td>\n    <td> more ![](/images/TB17xanLXXXXXapXXXXXXXXXXXX-40-40.png)</td>\n    <td> group ![](/images/TB1H142LXXXXXaiXVXXXXXXXXXX-40-40.png)</td>\n</tr>\n<tr>\n    <td> forward ![](/images/TB1lsl9LXXXXXbgXFXXXXXXXXXX-40-40.png)</td>\n    <td> folder ![](/images/TB1Ge01LXXXXXa1XVXXXXXXXXXX-40-40.png)</td>\n    <td> file ![](/images/TB1wQOfLXXXXXaoXpXXXXXXXXXX-40-40.png)</td>\n    <td> edit ![](/images/TB14HSnLXXXXXanXXXXXXXXXXXX-40-40.png)</td>\n</tr>\n<tr>\n    <td> create ![](/images/TB1OCigLXXXXXXZXpXXXXXXXXXX-48-48.png)</td>\n    <td> calendar  ![](/images/TB1pi41LXXXXXaRXVXXXXXXXXXX-40-40.png)</td>\n    <td> addfriend ![](/images/TB1cut5LXXXXXc2XFXXXXXXXXXX-40-40.png)</td>\n    <td> add ![](/images/TB1GN0VLXXXXXXVaXXXXXXXXXXX-40-40.png)</td>\n</tr>\n</table>\n","source":"_posts/钉钉API内置图标.md","raw":"---\ntitle: 钉钉API内置图标\ndate: 2016-01-26 14:25:57\ntags:\n---\n## Icon索引值对应的图片\n每个icon上方的字符串就是对应icon的索引\n通过设置相关索引，可以为按钮设置图标\n<table style=\"background:black;color:white;\">\n<tr>\n    <td> trash ![](/images/TB1U10ZLXXXXXbTXVXXXXXXXXXX-40-40.png)</td>\n    <td> time ![](/images/TB1Mbh3LXXXXXXAXVXXXXXXXXXX-40-40.png)</td>\n    <td> setting ![](/images/TB1Cz4YLXXXXXcKXVXXXXXXXXXX-40-40.png)</td>\n    <td> send ![](/images/TB1e9d0LXXXXXbkXVXXXXXXXXXX-48-48.png)</td>\n</tr>\n<tr>\n    <td> scan ![](/images/TB1Tfd8LXXXXXbDXFXXXXXXXXXX-40-40.png)</td>\n    <td> reply ![](/images/TB1p09nLXXXXXXAXXXXXXXXXXXX-48-48.png)</td>\n    <td> photo ![](/images/TB1KdqaLXXXXXXgXFXXXXXXXXXX-40-40.png)</td>\n    <td> personal ![](/images/TB1w81gLXXXXXXDXpXXXXXXXXXX-40-40.png)</td>\n</tr>\n<tr>\n    <td> org ![](/images/TB1BEpYLXXXXXcdXVXXXXXXXXXX-48-48.png)</td>\n    <td> ok  ![](/images/TB1Qkt.LXXXXXakXFXXXXXXXXXX-48-48.png)</td>\n    <td> more ![](/images/TB17xanLXXXXXapXXXXXXXXXXXX-40-40.png)</td>\n    <td> group ![](/images/TB1H142LXXXXXaiXVXXXXXXXXXX-40-40.png)</td>\n</tr>\n<tr>\n    <td> forward ![](/images/TB1lsl9LXXXXXbgXFXXXXXXXXXX-40-40.png)</td>\n    <td> folder ![](/images/TB1Ge01LXXXXXa1XVXXXXXXXXXX-40-40.png)</td>\n    <td> file ![](/images/TB1wQOfLXXXXXaoXpXXXXXXXXXX-40-40.png)</td>\n    <td> edit ![](/images/TB14HSnLXXXXXanXXXXXXXXXXXX-40-40.png)</td>\n</tr>\n<tr>\n    <td> create ![](/images/TB1OCigLXXXXXXZXpXXXXXXXXXX-48-48.png)</td>\n    <td> calendar  ![](/images/TB1pi41LXXXXXaRXVXXXXXXXXXX-40-40.png)</td>\n    <td> addfriend ![](/images/TB1cut5LXXXXXc2XFXXXXXXXXXX-40-40.png)</td>\n    <td> add ![](/images/TB1GN0VLXXXXXXVaXXXXXXXXXXX-40-40.png)</td>\n</tr>\n</table>\n","slug":"钉钉API内置图标","published":1,"updated":"2016-01-26T06:55:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxjj0007snsu864b1i8j"},{"title":"通过http代理访问ssh","date":"2016-02-18T01:39:56.000Z","_content":"淘宝TAE服务器需要通过http代理才能直接ssh访问实例，首先尝试了使用了nc\n```bash\nssh -p PORT USER@IP -o \"ProxyCommand=nc -X connect -x sshproxy.tae.aliyun.com:3128 %h %p\"\n```\n- -X 指定协议，connect代表HTTP\n\n但是nc命令不支持有账号密码的http代理。所以改用corkscrew。\n在osx下可以直接`brew install corkscrew`\n\n为了不用每次都输入那么长的命令，可以将配置信息写入ssh config文件。\n\n.ssh/config\n```bash\nHost IP\n  Port PORT\n  ProxyCommand corkscrew sshproxy.tae.aliyun.com 3128 %h %p ~/.ssh/proxyauth\n  ServerAliveInterval   10\n```\n\n.ssh/proxyauth\n```bash\nPROXY_USER:PROXY_PASSWORD\n```\n\n以后只需要和平时ssh一样执行`ssh USER@IP`即可。\n\n题外话：淘宝TAE有两个免费的实例配额，建议创建一个nginx实例，可以有子域名支持外网访问，并且是root权限。\n","source":"_posts/通过http代理访问ssh.md","raw":"---\ntitle: 通过http代理访问ssh\ndate: 2016-02-18 09:39:56\ntags:\n- ssh\n- http proxy\n- nc\n- corkscrew\n---\n淘宝TAE服务器需要通过http代理才能直接ssh访问实例，首先尝试了使用了nc\n```bash\nssh -p PORT USER@IP -o \"ProxyCommand=nc -X connect -x sshproxy.tae.aliyun.com:3128 %h %p\"\n```\n- -X 指定协议，connect代表HTTP\n\n但是nc命令不支持有账号密码的http代理。所以改用corkscrew。\n在osx下可以直接`brew install corkscrew`\n\n为了不用每次都输入那么长的命令，可以将配置信息写入ssh config文件。\n\n.ssh/config\n```bash\nHost IP\n  Port PORT\n  ProxyCommand corkscrew sshproxy.tae.aliyun.com 3128 %h %p ~/.ssh/proxyauth\n  ServerAliveInterval   10\n```\n\n.ssh/proxyauth\n```bash\nPROXY_USER:PROXY_PASSWORD\n```\n\n以后只需要和平时ssh一样执行`ssh USER@IP`即可。\n\n题外话：淘宝TAE有两个免费的实例配额，建议创建一个nginx实例，可以有子域名支持外网访问，并且是root权限。\n","slug":"通过http代理访问ssh","published":1,"updated":"2016-02-18T01:49:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxjw0008snsuljdsez9j"},{"title":"简历","date":"2016-01-26T02:58:20.000Z","_content":"姓    名：朱青玲\n毕业院校：九江职业技术学院\n专  业：电子设备运行与维修\n学    历：大专\n电子邮件：zhuqling at gmail dot com\n现居住：广州\ngithub: http://www.github.com/zhuqling\n\n> 10年外贸电商技术、产品、管理经验；\n> 对电商网站、企业ERP、仓储自动化、物流系统、APP等领域均有涉猎；\n> 充分理解技术实现和用户体验的重要性和冲突性；\n> 能持续促进流程优化和自动化，帮助企业实现互联网化、移动化。\n\n## 教育背景\n\n1998/09 -- 2003/07：九江职业技术学院 | 电子设备运行与维修 | 大专\n\n## 工作经历\n\n### 2015/11-至今 广州棒谷网络科技有限公司\nAPP技术总监 + 合伙人\n\n工作职责：\n1. 负责公司内部APP产品与技术\n2. APP团队组建与激励方案\n3. 兼任产品经理、需求工程师、UI设计、后台开发、技术经理\n\n部分APP：\n- 管理宝 http://fir.im/ibg 老板、总监、经理的运营指标、待办、审批、即时消息\n- Test Buy http://fir.im/ibgtb Amazon Test Buy平台\n- 合作平台 http://fir.im/ihezuo 供应商系统，采购、返修、对账\n- 跟单 http://fir.im/ibggd 移动采购、返修、新品\n- 买手 http://fir.im/ibgms 市场新品采集、下单\n- 物料开发 http://fir.im/ibgwl 市场物料采集、报价\n\n* 所有APP同时覆盖iOS和Android平台\n\n### 2015/3-2015/11 广州赛酷比软件公司\n技术总监\n\n工作职责：\n1. 负责海淘项目整体技术框架\n2. 组建技术团队\n\n部分工作内容：\n- 上哪淘 http://www.shangnatao.com\n- 垂直电商网站爬虫 基于scrapy(python)\n- 多卖家电商平台后台系统 (NodeJS+MongoDB+Redis+QUI), QUI是在bootstrap基础上扩展的一套UI库\n- 电商APP API (KoaJS)\n- iO+Android APP\n- 卖家实时客服系统 基于leancloud web+client sdk\n\n### 2012/10-2015/3 广州赛酷比软件公司\n架构组经理\n\n工作职责： \n1. 公司软件架构管理与开发\n2. 新项目调研、计划、实施、任务质量与进度控制\n3、对架构师、项目主管的管理 \n\n部分工作内容： \n- 《仓库快速发货系统》，支持单仓库1500同时在线发货，每天15万订单量，支持跨国家区域的分布式仓库，设计时兼容了绩校统一、流程优化、人机交互、最少运费/人力等因素 \n- 外贸电商ERP规划，涵盖进销存/财务/客服/人事/行政/eBay/Amazon/AliExpress等领域，适用于千万数据量的业务。 \n- 建立正规化开发流程 \n- 建立完善管理制度和奖罚措施 \n- 开展技术论坛，提升技术能力、增强项目主管管理能力\n\n### 2009/7—2012/10：广州棒谷网络科技有限公司\nC# ASP.Net高级开发工程师\n\n部分工作内容：\n- eBay二次开发\n- 国内最早eBay认证开发者，曾参加第一届eBay DevCon(SZ)\n- eBay销售优化相关算法、自动化销售管理 技术创始人\n- 销售提升2-3倍，工作效率提升4-5倍\n- SellerCube系统 技术创始人 http://www.sellercube.com\n- 关键字排名跟踪、自动价格跟踪\n- 智能打折，打折自动继期\n- SmartGallery智能展示窗\n- 自动eBay订单下载，Paypal数据下载、更新发货状态\n- DHL运单状态跟踪\n- 产品高度关联Tag页面\n- 高效顾客付款转化\n- BestMatchAdvisor.com eBay排名分析软件\n\n### 2008/11—2009/7：广州棒谷网络科技有限公司\nPHP高级工程师\nBanggood.com是一套功能完善的外贸网站，具有多年电子商务的经验，支持多种付款和运输方式。并与物流系统相联接。\n\n部分工作内容：\n- 外贸直销网站开发\n- http://www.banggood.com 技术创始人\n- 基于osCommerce二次开发\n- 编写了《osCommerce深度探密》pdf书\n- 增加Paypal国际支付，并按Paypal返回状态自动处理相关流程；\n- 增加UPS运费自动计算；\n- 原系统的MVC实现，以及前台的jQuery实现；\n- 完全改写全部模板，代码优化，采用对象缓存提高访问速度；\n- 改写后台管理，提高管理效率。\n\n### 2005/12—2008/11：科密科技发展有限公司\n开发工程师\n工作职责：公司门户网站开发及维护\n\n部分工作内容：\n- 活跃员工业余生活，建立了《公司员工活动照片集》子网；\n-  对公司网站成功进行改版，规范了网站内容及提升了用户体验，实现了全自动后台管理；\n- 《文件共享系统》成功上线，解决了异地资源共享及权限分配的难题，提供了分公司、办事处及经销商下载资料的平台。\n- 开发完成《明德考勤管理系统》。改善了常规软件的操作弊端，提高了效率。\n\n### 2004/10—2005/12：阳光科密股份有限公司\n技术支持工程师\n\n工作职责：从事产品的技术支持与服务、产品测试、客户问题整理与反馈、编写培训文档和说明书、以及网站维护与制作和软件UI设计等。\n\n部分工作内容： \n- 开发《客户问题管理系统》（MS SQL SERVER 2000+DELPHI），解决了客户问题收集、整理、及分析的问题；\n- 开发《指纹机工具软件》(运用Delphi的类及接口封装使程序支持所有类型设备)，提高了用户的易用性；\n- 开发《USEASY增强工具》，解决用户丢失密码问题；\n- 开发集团系统集成部网站，具备产品分类及后台管理功能；\n- 开发集团OEM部门网站。\n\n### 2003/07--2004/10：九江科海\n技术员\n电脑硬件、软件的安装及维护、局域网的组建及维护。\n期间为所在学校开发《图书馆媒体资源管理系统》，并因此获“青年志愿者先进个人”称号。\n\n## 其它\n\n- iOS APP https://itunes.apple.com/cn/developer/zhu-qingling/id691724651\n- 博弈论\n- 经济学\n- 剑桥商务英语证书BEC1\n- 程序员中级\n- 《中国房地产图网》\n- 《图库自动抓取程序》\n- 《图库管理及发布系统》\n- 《Listen Freeer 网络音乐播放器》\n- 《音乐自动抓取和管理程序》\n- 《歌手专辑网页发布程序》\n- 《模板静态化网站管理程序》\n- 《全能网页抓取器》\n- 《Zmusic在线网页播放器内核》(javascript)\n- 《Beijing 2008 生活参考》网站\n- 《明德考勤管理系统》\n- 《PHP文件管理系统》\n- 《PHP留言系统》\n\n## IT技术\n\n- delphi\n- php\n- c#\n- asp.net\n- objective-c\n- swift\n- kotlin\n- arduino\n- nodejs\n- express\n- koajs\n- mongodb\n- redis\n- ms sql server\n- mysql\n- golang\n- erlang\n- c\n- ElasticSearch\n- rabbitMQ\n- dock\n- bootstrap\n- jQuery\n- zepto\n- backbone\n- AngularJS\n- ReactJS\n- grunt\n- python\n- git\n","source":"_posts/简历.md","raw":"---\ntitle: 简历\ndate: 2016-01-26 10:58:20\ntags: \n- banggood.com\n- ebay\n- 棒谷\n---\n姓    名：朱青玲\n毕业院校：九江职业技术学院\n专  业：电子设备运行与维修\n学    历：大专\n电子邮件：zhuqling at gmail dot com\n现居住：广州\ngithub: http://www.github.com/zhuqling\n\n> 10年外贸电商技术、产品、管理经验；\n> 对电商网站、企业ERP、仓储自动化、物流系统、APP等领域均有涉猎；\n> 充分理解技术实现和用户体验的重要性和冲突性；\n> 能持续促进流程优化和自动化，帮助企业实现互联网化、移动化。\n\n## 教育背景\n\n1998/09 -- 2003/07：九江职业技术学院 | 电子设备运行与维修 | 大专\n\n## 工作经历\n\n### 2015/11-至今 广州棒谷网络科技有限公司\nAPP技术总监 + 合伙人\n\n工作职责：\n1. 负责公司内部APP产品与技术\n2. APP团队组建与激励方案\n3. 兼任产品经理、需求工程师、UI设计、后台开发、技术经理\n\n部分APP：\n- 管理宝 http://fir.im/ibg 老板、总监、经理的运营指标、待办、审批、即时消息\n- Test Buy http://fir.im/ibgtb Amazon Test Buy平台\n- 合作平台 http://fir.im/ihezuo 供应商系统，采购、返修、对账\n- 跟单 http://fir.im/ibggd 移动采购、返修、新品\n- 买手 http://fir.im/ibgms 市场新品采集、下单\n- 物料开发 http://fir.im/ibgwl 市场物料采集、报价\n\n* 所有APP同时覆盖iOS和Android平台\n\n### 2015/3-2015/11 广州赛酷比软件公司\n技术总监\n\n工作职责：\n1. 负责海淘项目整体技术框架\n2. 组建技术团队\n\n部分工作内容：\n- 上哪淘 http://www.shangnatao.com\n- 垂直电商网站爬虫 基于scrapy(python)\n- 多卖家电商平台后台系统 (NodeJS+MongoDB+Redis+QUI), QUI是在bootstrap基础上扩展的一套UI库\n- 电商APP API (KoaJS)\n- iO+Android APP\n- 卖家实时客服系统 基于leancloud web+client sdk\n\n### 2012/10-2015/3 广州赛酷比软件公司\n架构组经理\n\n工作职责： \n1. 公司软件架构管理与开发\n2. 新项目调研、计划、实施、任务质量与进度控制\n3、对架构师、项目主管的管理 \n\n部分工作内容： \n- 《仓库快速发货系统》，支持单仓库1500同时在线发货，每天15万订单量，支持跨国家区域的分布式仓库，设计时兼容了绩校统一、流程优化、人机交互、最少运费/人力等因素 \n- 外贸电商ERP规划，涵盖进销存/财务/客服/人事/行政/eBay/Amazon/AliExpress等领域，适用于千万数据量的业务。 \n- 建立正规化开发流程 \n- 建立完善管理制度和奖罚措施 \n- 开展技术论坛，提升技术能力、增强项目主管管理能力\n\n### 2009/7—2012/10：广州棒谷网络科技有限公司\nC# ASP.Net高级开发工程师\n\n部分工作内容：\n- eBay二次开发\n- 国内最早eBay认证开发者，曾参加第一届eBay DevCon(SZ)\n- eBay销售优化相关算法、自动化销售管理 技术创始人\n- 销售提升2-3倍，工作效率提升4-5倍\n- SellerCube系统 技术创始人 http://www.sellercube.com\n- 关键字排名跟踪、自动价格跟踪\n- 智能打折，打折自动继期\n- SmartGallery智能展示窗\n- 自动eBay订单下载，Paypal数据下载、更新发货状态\n- DHL运单状态跟踪\n- 产品高度关联Tag页面\n- 高效顾客付款转化\n- BestMatchAdvisor.com eBay排名分析软件\n\n### 2008/11—2009/7：广州棒谷网络科技有限公司\nPHP高级工程师\nBanggood.com是一套功能完善的外贸网站，具有多年电子商务的经验，支持多种付款和运输方式。并与物流系统相联接。\n\n部分工作内容：\n- 外贸直销网站开发\n- http://www.banggood.com 技术创始人\n- 基于osCommerce二次开发\n- 编写了《osCommerce深度探密》pdf书\n- 增加Paypal国际支付，并按Paypal返回状态自动处理相关流程；\n- 增加UPS运费自动计算；\n- 原系统的MVC实现，以及前台的jQuery实现；\n- 完全改写全部模板，代码优化，采用对象缓存提高访问速度；\n- 改写后台管理，提高管理效率。\n\n### 2005/12—2008/11：科密科技发展有限公司\n开发工程师\n工作职责：公司门户网站开发及维护\n\n部分工作内容：\n- 活跃员工业余生活，建立了《公司员工活动照片集》子网；\n-  对公司网站成功进行改版，规范了网站内容及提升了用户体验，实现了全自动后台管理；\n- 《文件共享系统》成功上线，解决了异地资源共享及权限分配的难题，提供了分公司、办事处及经销商下载资料的平台。\n- 开发完成《明德考勤管理系统》。改善了常规软件的操作弊端，提高了效率。\n\n### 2004/10—2005/12：阳光科密股份有限公司\n技术支持工程师\n\n工作职责：从事产品的技术支持与服务、产品测试、客户问题整理与反馈、编写培训文档和说明书、以及网站维护与制作和软件UI设计等。\n\n部分工作内容： \n- 开发《客户问题管理系统》（MS SQL SERVER 2000+DELPHI），解决了客户问题收集、整理、及分析的问题；\n- 开发《指纹机工具软件》(运用Delphi的类及接口封装使程序支持所有类型设备)，提高了用户的易用性；\n- 开发《USEASY增强工具》，解决用户丢失密码问题；\n- 开发集团系统集成部网站，具备产品分类及后台管理功能；\n- 开发集团OEM部门网站。\n\n### 2003/07--2004/10：九江科海\n技术员\n电脑硬件、软件的安装及维护、局域网的组建及维护。\n期间为所在学校开发《图书馆媒体资源管理系统》，并因此获“青年志愿者先进个人”称号。\n\n## 其它\n\n- iOS APP https://itunes.apple.com/cn/developer/zhu-qingling/id691724651\n- 博弈论\n- 经济学\n- 剑桥商务英语证书BEC1\n- 程序员中级\n- 《中国房地产图网》\n- 《图库自动抓取程序》\n- 《图库管理及发布系统》\n- 《Listen Freeer 网络音乐播放器》\n- 《音乐自动抓取和管理程序》\n- 《歌手专辑网页发布程序》\n- 《模板静态化网站管理程序》\n- 《全能网页抓取器》\n- 《Zmusic在线网页播放器内核》(javascript)\n- 《Beijing 2008 生活参考》网站\n- 《明德考勤管理系统》\n- 《PHP文件管理系统》\n- 《PHP留言系统》\n\n## IT技术\n\n- delphi\n- php\n- c#\n- asp.net\n- objective-c\n- swift\n- kotlin\n- arduino\n- nodejs\n- express\n- koajs\n- mongodb\n- redis\n- ms sql server\n- mysql\n- golang\n- erlang\n- c\n- ElasticSearch\n- rabbitMQ\n- dock\n- bootstrap\n- jQuery\n- zepto\n- backbone\n- AngularJS\n- ReactJS\n- grunt\n- python\n- git\n","slug":"简历","published":1,"updated":"2016-11-22T09:55:09.000Z","_id":"civhumxk1000hsnsuxo42ai4x","comments":1,"layout":"post","photos":[],"link":""},{"title":"技术分享 - 2016-1-22","date":"2016-01-26T05:00:31.000Z","_content":"\n- iOS 中的 UI 自适应 https://realm.io/cn/news/gotocph-sam-davies-adaptive-ui-ios/\n- 2016中国Swift开发者大会的所有源文件 https://github.com/atConf/atswift-2016-resources\n- 分析iOS UI的利器Reveal安装破解教程 http://www.jianshu.com/p/0cc7089143a3\n\n- Android屏幕适配方案，直接填写设计图上的像素尺寸即可完成适配，最大限度解决适配问题。 https://github.com/hongyangAndroid/AndroidAutoLayout\n\n- Hybrid APP架构设计思路 https://github.com/chemdemo/chemdemo.github.io/issues/12\n\n- 微信Android客户端架构演进之路 http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&mid=402023042&idx=1&sn=0c64c9db380410e58c097ee65708ff11&scene=0#wechat_redirect","source":"_posts/技术分享-2016-1-22.md","raw":"---\ntitle: 技术分享 - 2016-1-22\ndate: 2016-01-26 13:00:31\ntags:\n- 技术分享\n- iOS\n- Android\n---\n\n- iOS 中的 UI 自适应 https://realm.io/cn/news/gotocph-sam-davies-adaptive-ui-ios/\n- 2016中国Swift开发者大会的所有源文件 https://github.com/atConf/atswift-2016-resources\n- 分析iOS UI的利器Reveal安装破解教程 http://www.jianshu.com/p/0cc7089143a3\n\n- Android屏幕适配方案，直接填写设计图上的像素尺寸即可完成适配，最大限度解决适配问题。 https://github.com/hongyangAndroid/AndroidAutoLayout\n\n- Hybrid APP架构设计思路 https://github.com/chemdemo/chemdemo.github.io/issues/12\n\n- 微信Android客户端架构演进之路 http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&mid=402023042&idx=1&sn=0c64c9db380410e58c097ee65708ff11&scene=0#wechat_redirect","slug":"技术分享-2016-1-22","published":1,"updated":"2016-01-26T05:01:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxk6000osnsu1ltrhlde"},{"title":"前端冷知识","date":"2016-02-17T02:05:23.000Z","_content":"## 浏览器地址栏运行JavaScript代码\n```javascript\njavascript:alert('hello from address bar :)');\n```\n\n## 浏览器地址栏运行HTML代码\n```\ndata:text/html,<h1>Hello, world!</h1>\n```\n\n## 浏览器当编辑器\n```\ndata:text/html, <html contenteditable>\n```\n\n## 随意编辑页面\n```javascript\ndocument.body.contentEditable='true';\n```\n\n## 利用a标签自动解析URL\n```javascript\nvar a = document.createElement('a');\na.href = 'http://www.baidu.com/abc/p/';\nconsole.log(a.host);\n```\n\n用这一原理，就得到了一个更加健壮的解析URL各部分的通用方法了。[代码请看](http://james.padolsey.com/javascript/parsing-urls-with-the-dom/)\n\n## 加载CDN文件时，可以省掉HTTP标识\n```\n<script src=\"//domain.com/path/to/script.js\"></script>\n```\n\n## 利用script标签保存任意信息\n```\n<script type=\"text\" id=\"template\">\n<h1>This won't display</h1>\n</script>\n<script>\nvar text = document.getElementById('template').innerHTML\n</script>\n```\n\n## 垂直居中\n```css\n.center-vertical {\n    position: relative;\n    top: 50%;\n    transform: translateY(-50%);\n}\n```\n\n## 实时编辑CSS\n```html\n<!DOCTYPE html>\n<html>\n    <body>\n        <style style=\"display:block\" contentEditable>\n            body { color: blue }\n        </style>\n    </body>\n</html>\n```\n\n## CSS中做简单运算\n```css\n.container{\n    background-position: calc(100% - 50px) calc(100% - 20px);\n}\n```\n\n## 生成随机字符串\n```javascript\nfunction generateRandomAlphaNum(len) {\n    var rdmString = \"\";\n    for (; rdmString.length < len; rdmString += Math.random().toString(36).substr(2));\n    return rdmString.substr(0, len);\n}\n```\n\n## 整数的操作\n\n0和~~是很好的一个例子，使用这两者可以将浮点转成整型且效率方面要比同类的parseInt,Math.round 要快。在处理像素及动画位移等效果的时候会很有用。性能比较见此。\n```javascript\nvar foo = (12.4 / 4.13) | 0; // 结果为3\nvar bar = ~~(12.4 / 4.13); // 结果为3\n```\n\n* !!将一个值方便快速转化为布尔值 !!window===true\n\n## If语句的变形\n```javascript\nerror&&alert('warning!');\n```\n\n```javascript\nif(conditoin) alert(1),alert(2),console.log(3);\n```\n\n## 禁止以iframe加载页面\n```javascript\nif (window.location != window.parent.location) window.parent.location = window.location;\n```\n\n","source":"_posts/前端冷知识.md","raw":"---\ntitle: 前端冷知识\ndate: 2016-02-17 10:05:23\ntags:\n- 前端\n- js\n- css\n---\n## 浏览器地址栏运行JavaScript代码\n```javascript\njavascript:alert('hello from address bar :)');\n```\n\n## 浏览器地址栏运行HTML代码\n```\ndata:text/html,<h1>Hello, world!</h1>\n```\n\n## 浏览器当编辑器\n```\ndata:text/html, <html contenteditable>\n```\n\n## 随意编辑页面\n```javascript\ndocument.body.contentEditable='true';\n```\n\n## 利用a标签自动解析URL\n```javascript\nvar a = document.createElement('a');\na.href = 'http://www.baidu.com/abc/p/';\nconsole.log(a.host);\n```\n\n用这一原理，就得到了一个更加健壮的解析URL各部分的通用方法了。[代码请看](http://james.padolsey.com/javascript/parsing-urls-with-the-dom/)\n\n## 加载CDN文件时，可以省掉HTTP标识\n```\n<script src=\"//domain.com/path/to/script.js\"></script>\n```\n\n## 利用script标签保存任意信息\n```\n<script type=\"text\" id=\"template\">\n<h1>This won't display</h1>\n</script>\n<script>\nvar text = document.getElementById('template').innerHTML\n</script>\n```\n\n## 垂直居中\n```css\n.center-vertical {\n    position: relative;\n    top: 50%;\n    transform: translateY(-50%);\n}\n```\n\n## 实时编辑CSS\n```html\n<!DOCTYPE html>\n<html>\n    <body>\n        <style style=\"display:block\" contentEditable>\n            body { color: blue }\n        </style>\n    </body>\n</html>\n```\n\n## CSS中做简单运算\n```css\n.container{\n    background-position: calc(100% - 50px) calc(100% - 20px);\n}\n```\n\n## 生成随机字符串\n```javascript\nfunction generateRandomAlphaNum(len) {\n    var rdmString = \"\";\n    for (; rdmString.length < len; rdmString += Math.random().toString(36).substr(2));\n    return rdmString.substr(0, len);\n}\n```\n\n## 整数的操作\n\n0和~~是很好的一个例子，使用这两者可以将浮点转成整型且效率方面要比同类的parseInt,Math.round 要快。在处理像素及动画位移等效果的时候会很有用。性能比较见此。\n```javascript\nvar foo = (12.4 / 4.13) | 0; // 结果为3\nvar bar = ~~(12.4 / 4.13); // 结果为3\n```\n\n* !!将一个值方便快速转化为布尔值 !!window===true\n\n## If语句的变形\n```javascript\nerror&&alert('warning!');\n```\n\n```javascript\nif(conditoin) alert(1),alert(2),console.log(3);\n```\n\n## 禁止以iframe加载页面\n```javascript\nif (window.location != window.parent.location) window.parent.location = window.location;\n```\n\n","slug":"前端冷知识","published":1,"updated":"2016-02-17T02:17:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxkb000vsnsusruhxk3t"},{"title":"中文全文检索","date":"2016-01-26T04:46:44.000Z","_content":"## 安装\n\n```\ncp elasticsearch-analysis-ik-1.2.6.jar ./plugins/analysis-ik/ # 复制jar\ncp *.* ./config/ik/ # 复制字库\nnano ./config/elasticsearch.yml\n```\n\n追加\n\n<pre>\nindex:\n  analysis:\n    analyzer:\n      ik:\n        alias:\n        - ik_analyzer\n        type: org.elasticsearch.index.analysis.IkAnalyzerProvider\n      ik_max_word:\n        type: ik\n        use_smart: false\n      ik_smart:\n        type: ik\n        use_smart: true\n\n#index.analysis.analyzer.default.type: keyword\nindex.analysis.analyzer.default.type: ik # 设置默认分析器为ik [可选]\n</pre>\n\n## 删除索引\n\nDELETE /index\n\n## 创建索引\n\nPUT /index\n\n## 设置mapping\n\n<pre>\nPOST /index/fulltext/_mapping\n{\n  \"fulltext\": {\n    \"_all\": {\n      \"indexAnalyzer\": \"ik\",\n      \"searchAnalyzer\": \"ik\",\n      \"term_vector\": \"no\",\n      \"store\": \"false\"\n    },\n    \"properties\": {\n      \"content\": {\n        \"type\": \"string\",\n        \"store\": \"no\",\n        \"term_vector\": \"with_positions_offsets\",\n        \"indexAnalyzer\": \"ik\",\n        \"searchAnalyzer\": \"ik\",\n        \"include_in_all\": \"true\",\n        \"boost\": 8\n      }\n    }\n  }\n}\n</pre>\n\n## 检查mapping\n\nGET /index/fulltext/_mapping\n\n## 建立索引\n\n<pre>\nPOST /index/fulltext/_bulk\n{\"index\":{\"_id\":1}}\n{content:\"美国留给伊拉克的是个烂摊子吗\"}\n{\"index\":{\"_id\":2}}\n{content:\"公安部：各地校车将享最高路权\"}\n{\"index\":{\"_id\":3}}\n{content:\"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船\"}\n{\"index\":{\"_id\":4}}\n{content:\"中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首\"}\n</pre>\n\n## 搜索\n\n<pre>\nPOST /index/fulltext/_search?pretty=true\n{\n    \"query\" : { \"term\" : { \"content\" : \"烂摊子\" }},\n    \"highlight\" : {\n        \"pre_tags\" : [\"<tag1>\", \"<tag2>\"],\n        \"post_tags\" : [\"</tag1>\", \"</tag2>\"],\n        \"fields\" : {\n            \"content\" : {}\n        }\n    }\n}\n</pre>","source":"_posts/中文全文检索.md","raw":"---\ntitle: 中文全文检索\ndate: 2016-01-26 12:46:44\ntags:\n- Elastic Search\n- 全文检索\n---\n## 安装\n\n```\ncp elasticsearch-analysis-ik-1.2.6.jar ./plugins/analysis-ik/ # 复制jar\ncp *.* ./config/ik/ # 复制字库\nnano ./config/elasticsearch.yml\n```\n\n追加\n\n<pre>\nindex:\n  analysis:\n    analyzer:\n      ik:\n        alias:\n        - ik_analyzer\n        type: org.elasticsearch.index.analysis.IkAnalyzerProvider\n      ik_max_word:\n        type: ik\n        use_smart: false\n      ik_smart:\n        type: ik\n        use_smart: true\n\n#index.analysis.analyzer.default.type: keyword\nindex.analysis.analyzer.default.type: ik # 设置默认分析器为ik [可选]\n</pre>\n\n## 删除索引\n\nDELETE /index\n\n## 创建索引\n\nPUT /index\n\n## 设置mapping\n\n<pre>\nPOST /index/fulltext/_mapping\n{\n  \"fulltext\": {\n    \"_all\": {\n      \"indexAnalyzer\": \"ik\",\n      \"searchAnalyzer\": \"ik\",\n      \"term_vector\": \"no\",\n      \"store\": \"false\"\n    },\n    \"properties\": {\n      \"content\": {\n        \"type\": \"string\",\n        \"store\": \"no\",\n        \"term_vector\": \"with_positions_offsets\",\n        \"indexAnalyzer\": \"ik\",\n        \"searchAnalyzer\": \"ik\",\n        \"include_in_all\": \"true\",\n        \"boost\": 8\n      }\n    }\n  }\n}\n</pre>\n\n## 检查mapping\n\nGET /index/fulltext/_mapping\n\n## 建立索引\n\n<pre>\nPOST /index/fulltext/_bulk\n{\"index\":{\"_id\":1}}\n{content:\"美国留给伊拉克的是个烂摊子吗\"}\n{\"index\":{\"_id\":2}}\n{content:\"公安部：各地校车将享最高路权\"}\n{\"index\":{\"_id\":3}}\n{content:\"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船\"}\n{\"index\":{\"_id\":4}}\n{content:\"中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首\"}\n</pre>\n\n## 搜索\n\n<pre>\nPOST /index/fulltext/_search?pretty=true\n{\n    \"query\" : { \"term\" : { \"content\" : \"烂摊子\" }},\n    \"highlight\" : {\n        \"pre_tags\" : [\"<tag1>\", \"<tag2>\"],\n        \"post_tags\" : [\"</tag1>\", \"</tag2>\"],\n        \"fields\" : {\n            \"content\" : {}\n        }\n    }\n}\n</pre>","slug":"中文全文检索","published":1,"updated":"2016-01-26T04:49:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxkg0012snsu6zno8g74"},{"title":"tmux入门","date":"2016-08-31T09:09:00.000Z","_content":"\n使用ssh登陆远程机，每次都要输入ssh user@111.111.111.111，没有配置好ssh免密的话，还要输入密码，如果频繁操作会很麻烦。\n\n用tmux可以解决这个问题，tmux可以持久化连接，只要一个命令又会立即还原你退出时的状态，实在太棒了。\n\n## 新建会话\n\n`tmux new -s session-name`\n\n## 会话列表\n\n`tmux ls`\n\n## 按会话名称连接\n\n`tmux a -t session-name`\n\n## 连接到最近会话\n\n`tmux a`\n\n* iterm下tmux菜单项，需要开启 tmux -CC后才可用，通过dashboard可以图形化管理session。","source":"_posts/tmux入门.md","raw":"---\ntitle: tmux入门\ndate: 2016-08-31 17:09\ntags:\n- tmux\n- iterm\n---\n\n使用ssh登陆远程机，每次都要输入ssh user@111.111.111.111，没有配置好ssh免密的话，还要输入密码，如果频繁操作会很麻烦。\n\n用tmux可以解决这个问题，tmux可以持久化连接，只要一个命令又会立即还原你退出时的状态，实在太棒了。\n\n## 新建会话\n\n`tmux new -s session-name`\n\n## 会话列表\n\n`tmux ls`\n\n## 按会话名称连接\n\n`tmux a -t session-name`\n\n## 连接到最近会话\n\n`tmux a`\n\n* iterm下tmux菜单项，需要开启 tmux -CC后才可用，通过dashboard可以图形化管理session。","slug":"tmux入门","published":1,"updated":"2016-08-31T09:30:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxkn0017snsunv9dz0ju"},{"title":"Linux命令复习","date":"2016-09-08T01:50:00.000Z","_content":"\n# 基础命令\n\nls 排除文件\n\n`ls -I \"abc*\"`\n\ngrep 排除, -v反转，-E扩展匹配\n\n`ls | grep -vE \"Filesystem\"`\n\nawk 变量及输出\n\n`df -h | awk \"{print $1 \" \" $5}\"`\n\n`awk '/MemTotal/{total=$2}/MemFree/{free=$2}END{print (total-free)/1024 \" M\"}' /proc/meminfo`\n\n\ndf 不自动换行\n\n`df -hP`\n\n# 网络DNS相关\n\n```sh\nhost -t a www.baidu.com\nhost -t soa www.baidu.com\nhost -t cname www.baidu.com\n```\n\n```sh\nnslookup\n> set q=a\n> www.baidu.com\n> set q=cname\n> www.baidu.com\n```\n\n```sh\ndig @127.0.0.1 -t a www.baidu.com\ndig @127.0.0.1 -t soa www.baidu.com\ndig @127.0.0.1 -t cname www.baidu.com\n```\n","source":"_posts/linux_command_1.md","raw":"---\ntitle: Linux命令复习\ndate: 2016-09-08 09:50:00\ntags:\n- linux\n- command\n- network\n---\n\n# 基础命令\n\nls 排除文件\n\n`ls -I \"abc*\"`\n\ngrep 排除, -v反转，-E扩展匹配\n\n`ls | grep -vE \"Filesystem\"`\n\nawk 变量及输出\n\n`df -h | awk \"{print $1 \" \" $5}\"`\n\n`awk '/MemTotal/{total=$2}/MemFree/{free=$2}END{print (total-free)/1024 \" M\"}' /proc/meminfo`\n\n\ndf 不自动换行\n\n`df -hP`\n\n# 网络DNS相关\n\n```sh\nhost -t a www.baidu.com\nhost -t soa www.baidu.com\nhost -t cname www.baidu.com\n```\n\n```sh\nnslookup\n> set q=a\n> www.baidu.com\n> set q=cname\n> www.baidu.com\n```\n\n```sh\ndig @127.0.0.1 -t a www.baidu.com\ndig @127.0.0.1 -t soa www.baidu.com\ndig @127.0.0.1 -t cname www.baidu.com\n```\n","slug":"linux_command_1","published":1,"updated":"2016-09-08T02:01:28.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxl3001csnsuj2ju1ndg"},{"title":"git回滚到已提交的上个版本","date":"2016-02-15T08:52:55.000Z","_content":"当git push后，发现错误提交了代码，可以使用以下命令回滚到上个版本，以你的正确版本号替换下面的版本号\n```bash\ngit reset --hard 56e05fc; git reset --soft HEAD@{1}; git commit\n```","source":"_posts/git回滚到已提交的上个版本.md","raw":"---\ntitle: git回滚到已提交的上个版本\ndate: 2016-02-15 16:52:55\ntags:\n- git\n- git revert\n---\n当git push后，发现错误提交了代码，可以使用以下命令回滚到上个版本，以你的正确版本号替换下面的版本号\n```bash\ngit reset --hard 56e05fc; git reset --soft HEAD@{1}; git commit\n```","slug":"git回滚到已提交的上个版本","published":1,"updated":"2016-02-15T08:54:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxl7001jsnsuhyp0d9ig"},{"title":"git 重设远程源","date":"2016-02-15T09:01:33.000Z","_content":"当git远程源有变更或设置错误了源时，使用如下命令个性远程源\n\n```bash\ngit remote rm origin;\ngit remote add git@192.168.2.4:root/dd-push.git;\ngit push --set-upstream origin master;\n```","source":"_posts/git-重设远程源.md","raw":"---\ntitle: git 重设远程源\ndate: 2016-02-15 17:01:33\ntags:\n- git\n- git rebase\n---\n当git远程源有变更或设置错误了源时，使用如下命令个性远程源\n\n```bash\ngit remote rm origin;\ngit remote add git@192.168.2.4:root/dd-push.git;\ngit push --set-upstream origin master;\n```","slug":"git-重设远程源","published":1,"updated":"2016-02-15T09:03:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxld001osnsuisxmj6oi"},{"title":"git ignore file","date":"2016-01-26T04:54:46.000Z","_content":"\n## Xcode .gitignore file\n```\n#########################\n# .gitignore file for Xcode4 and Xcode5 Source projects\n#\n# Apple bugs, waiting for Apple to fix/respond:\n#\n#    15564624 - what does the xccheckout file in Xcode5 do? Where's the documentation?\n#\n# Version 2.3\n# For latest version, see: http://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects\n#\n# 2014 updates:\n# - appended non-standard items DISABLED by default (uncomment if you use those tools)\n# - removed the edit that an SO.com moderator made without bothering to ask me\n# - researched CocoaPods .lock more carefully, thanks to Gokhan Celiker\n# 2013 updates:\n# - fixed the broken \"save personal Schemes\"\n# - added line-by-line explanations for EVERYTHING (some were missing)\n#\n# NB: if you are storing \"built\" products, this WILL NOT WORK,\n# and you should use a different .gitignore (or none at all)\n# This file is for SOURCE projects, where there are many extra\n# files that we want to exclude\n#\n#########################\n\n#####\n# OS X temporary files that should never be committed\n#\n# c.f. http://www.westwind.com/reference/os-x/invisibles.html\n\n.DS_Store\n\n# c.f. http://www.westwind.com/reference/os-x/invisibles.html\n\n.Trashes\n\n# c.f. http://www.westwind.com/reference/os-x/invisibles.html\n\n*.swp\n\n#\n# *.lock - this is used and abused by many editors for many different things.\n#    For the main ones I use (e.g. Eclipse), it should be excluded \n#    from source-control, but YMMV.\n#   (lock files are usually local-only file-synchronization on the local FS that should NOT go in git)\n# c.f. the \"OPTIONAL\" section at bottom though, for tool-specific variations!\n\n*.lock\n\n\n#\n# profile - REMOVED temporarily (on double-checking, I can't find it in OS X docs?)\n#profile\n\n\n####\n# Xcode temporary files that should never be committed\n# \n# NB: NIB/XIB files still exist even on Storyboard projects, so we want this...\n\n*~.nib\n\n\n####\n# Xcode build files -\n#\n# NB: slash on the end, so we only remove the FOLDER, not any files that were badly named \"DerivedData\"\n\nDerivedData/\n\n# NB: slash on the end, so we only remove the FOLDER, not any files that were badly named \"build\"\n\nbuild/\n\n\n#####\n# Xcode private settings (window sizes, bookmarks, breakpoints, custom executables, smart groups)\n#\n# This is complicated:\n#\n# SOMETIMES you need to put this file in version control.\n# Apple designed it poorly - if you use \"custom executables\", they are\n#  saved in this file.\n# 99% of projects do NOT use those, so they do NOT want to version control this file.\n#  ..but if you're in the 1%, comment out the line \"*.pbxuser\"\n\n# .pbxuser: http://lists.apple.com/archives/xcode-users/2004/Jan/msg00193.html\n\n*.pbxuser\n\n# .mode1v3: http://lists.apple.com/archives/xcode-users/2007/Oct/msg00465.html\n\n*.mode1v3\n\n# .mode2v3: http://lists.apple.com/archives/xcode-users/2007/Oct/msg00465.html\n\n*.mode2v3\n\n# .perspectivev3: http://stackoverflow.com/questions/5223297/xcode-projects-what-is-a-perspectivev3-file\n\n*.perspectivev3\n\n#    NB: also, whitelist the default ones, some projects need to use these\n!default.pbxuser\n!default.mode1v3\n!default.mode2v3\n!default.perspectivev3\n\n\n####\n# Xcode 4 - semi-personal settings\n#\n#\n# OPTION 1: ---------------------------------\n#     throw away ALL personal settings (including custom schemes!\n#     - unless they are \"shared\")\n#\n# NB: this is exclusive with OPTION 2 below\nxcuserdata\n\n# OPTION 2: ---------------------------------\n#     get rid of ALL personal settings, but KEEP SOME OF THEM\n#     - NB: you must manually uncomment the bits you want to keep\n#\n# NB: this *requires* git v1.8.2 or above; you may need to upgrade to latest OS X,\n#    or manually install git over the top of the OS X version\n# NB: this is exclusive with OPTION 1 above\n#\n#xcuserdata/**/*\n\n#     (requires option 2 above): Personal Schemes\n#\n#!xcuserdata/**/xcschemes/*\n\n####\n# XCode 4 workspaces - more detailed\n#\n# Workspaces are important! They are a core feature of Xcode - don't exclude them :)\n#\n# Workspace layout is quite spammy. For reference:\n#\n# /(root)/\n#   /(project-name).xcodeproj/\n#     project.pbxproj\n#     /project.xcworkspace/\n#       contents.xcworkspacedata\n#       /xcuserdata/\n#         /(your name)/xcuserdatad/\n#           UserInterfaceState.xcuserstate\n#     /xcsshareddata/\n#       /xcschemes/\n#         (shared scheme name).xcscheme\n#     /xcuserdata/\n#       /(your name)/xcuserdatad/\n#         (private scheme).xcscheme\n#         xcschememanagement.plist\n#\n#\n\n####\n# Xcode 4 - Deprecated classes\n#\n# Allegedly, if you manually \"deprecate\" your classes, they get moved here.\n#\n# We're using source-control, so this is a \"feature\" that we do not want!\n\n*.moved-aside\n\n####\n# OPTIONAL: Some well-known tools that people use side-by-side with Xcode / iOS development\n#\n# NB: I'd rather not include these here, but gitignore's design is weak and doesn't allow\n#     modular gitignore: you have to put EVERYTHING in one file.\n#\n# COCOAPODS:\n#\n# c.f. http://guides.cocoapods.org/using/using-cocoapods.html#what-is-a-podfilelock\n# c.f. http://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control\n#\n#!Podfile.lock\n#\n# RUBY:\n#\n# c.f. http://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/\n#\n#!Gemfile.lock\n#\n# IDEA:\n#\n#.idea\n#\n# TEXTMATE:\n#\n# -- UNVERIFIED: c.f. http://stackoverflow.com/a/50283/153422\n#\n#tm_build_errors\n\n####\n# UNKNOWN: recommended by others, but I can't discover what these files are\n#\n# Community suggestions (unverified, no evidence available - DISABLED by default)\n#\n# 1. Xcode 5 - VCS file\n#\n# \"The data in this file not represent state of your project.\n# If you'll leave this file in git - you will have merge conflicts during \n# pull your cahnges to other's repo\"\n#\n#*.xccheckout\n*.xccheckout\n```\n\n## Android studio .gitignore file\n```\n#built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Windows thumbnail db\nThumbs.db\n\n# OSX files\n.DS_Store\n\n# Eclipse project files\n.classpath\n.project\n\n# Android Studio\n*.iml\n.idea\n#.idea/workspace.xml - remove # and delete .idea if it better suit your needs.\n.gradle\nbuild/\n\n#NDK\nobj/\n```\n\n## NodeJS .gitignore file\n```\n# Node.js\n\n.DS_Store\nThumbs.db\n*.log\n\nlib-cov\n*.seed\n*.log\n*.csv\n*.dat\n*.out\n*.pid\n*.gz\n\npids\nlogs\nresults\n\nnpm-debug.log\nnode_modules/\n\n# KOAN\n\ndist\n.tmp\n.nodemon\nbower_components/\n.nodemonignore\n.sass-cache/\n.bower-*/\ntest/coverage/\nlogs/*\n!.gitkeep\n```","source":"_posts/git-ignore-file.md","raw":"---\ntitle: git ignore file\ndate: 2016-01-26 12:54:46\ntags:\n- git\n- gitignore\n---\n\n## Xcode .gitignore file\n```\n#########################\n# .gitignore file for Xcode4 and Xcode5 Source projects\n#\n# Apple bugs, waiting for Apple to fix/respond:\n#\n#    15564624 - what does the xccheckout file in Xcode5 do? Where's the documentation?\n#\n# Version 2.3\n# For latest version, see: http://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects\n#\n# 2014 updates:\n# - appended non-standard items DISABLED by default (uncomment if you use those tools)\n# - removed the edit that an SO.com moderator made without bothering to ask me\n# - researched CocoaPods .lock more carefully, thanks to Gokhan Celiker\n# 2013 updates:\n# - fixed the broken \"save personal Schemes\"\n# - added line-by-line explanations for EVERYTHING (some were missing)\n#\n# NB: if you are storing \"built\" products, this WILL NOT WORK,\n# and you should use a different .gitignore (or none at all)\n# This file is for SOURCE projects, where there are many extra\n# files that we want to exclude\n#\n#########################\n\n#####\n# OS X temporary files that should never be committed\n#\n# c.f. http://www.westwind.com/reference/os-x/invisibles.html\n\n.DS_Store\n\n# c.f. http://www.westwind.com/reference/os-x/invisibles.html\n\n.Trashes\n\n# c.f. http://www.westwind.com/reference/os-x/invisibles.html\n\n*.swp\n\n#\n# *.lock - this is used and abused by many editors for many different things.\n#    For the main ones I use (e.g. Eclipse), it should be excluded \n#    from source-control, but YMMV.\n#   (lock files are usually local-only file-synchronization on the local FS that should NOT go in git)\n# c.f. the \"OPTIONAL\" section at bottom though, for tool-specific variations!\n\n*.lock\n\n\n#\n# profile - REMOVED temporarily (on double-checking, I can't find it in OS X docs?)\n#profile\n\n\n####\n# Xcode temporary files that should never be committed\n# \n# NB: NIB/XIB files still exist even on Storyboard projects, so we want this...\n\n*~.nib\n\n\n####\n# Xcode build files -\n#\n# NB: slash on the end, so we only remove the FOLDER, not any files that were badly named \"DerivedData\"\n\nDerivedData/\n\n# NB: slash on the end, so we only remove the FOLDER, not any files that were badly named \"build\"\n\nbuild/\n\n\n#####\n# Xcode private settings (window sizes, bookmarks, breakpoints, custom executables, smart groups)\n#\n# This is complicated:\n#\n# SOMETIMES you need to put this file in version control.\n# Apple designed it poorly - if you use \"custom executables\", they are\n#  saved in this file.\n# 99% of projects do NOT use those, so they do NOT want to version control this file.\n#  ..but if you're in the 1%, comment out the line \"*.pbxuser\"\n\n# .pbxuser: http://lists.apple.com/archives/xcode-users/2004/Jan/msg00193.html\n\n*.pbxuser\n\n# .mode1v3: http://lists.apple.com/archives/xcode-users/2007/Oct/msg00465.html\n\n*.mode1v3\n\n# .mode2v3: http://lists.apple.com/archives/xcode-users/2007/Oct/msg00465.html\n\n*.mode2v3\n\n# .perspectivev3: http://stackoverflow.com/questions/5223297/xcode-projects-what-is-a-perspectivev3-file\n\n*.perspectivev3\n\n#    NB: also, whitelist the default ones, some projects need to use these\n!default.pbxuser\n!default.mode1v3\n!default.mode2v3\n!default.perspectivev3\n\n\n####\n# Xcode 4 - semi-personal settings\n#\n#\n# OPTION 1: ---------------------------------\n#     throw away ALL personal settings (including custom schemes!\n#     - unless they are \"shared\")\n#\n# NB: this is exclusive with OPTION 2 below\nxcuserdata\n\n# OPTION 2: ---------------------------------\n#     get rid of ALL personal settings, but KEEP SOME OF THEM\n#     - NB: you must manually uncomment the bits you want to keep\n#\n# NB: this *requires* git v1.8.2 or above; you may need to upgrade to latest OS X,\n#    or manually install git over the top of the OS X version\n# NB: this is exclusive with OPTION 1 above\n#\n#xcuserdata/**/*\n\n#     (requires option 2 above): Personal Schemes\n#\n#!xcuserdata/**/xcschemes/*\n\n####\n# XCode 4 workspaces - more detailed\n#\n# Workspaces are important! They are a core feature of Xcode - don't exclude them :)\n#\n# Workspace layout is quite spammy. For reference:\n#\n# /(root)/\n#   /(project-name).xcodeproj/\n#     project.pbxproj\n#     /project.xcworkspace/\n#       contents.xcworkspacedata\n#       /xcuserdata/\n#         /(your name)/xcuserdatad/\n#           UserInterfaceState.xcuserstate\n#     /xcsshareddata/\n#       /xcschemes/\n#         (shared scheme name).xcscheme\n#     /xcuserdata/\n#       /(your name)/xcuserdatad/\n#         (private scheme).xcscheme\n#         xcschememanagement.plist\n#\n#\n\n####\n# Xcode 4 - Deprecated classes\n#\n# Allegedly, if you manually \"deprecate\" your classes, they get moved here.\n#\n# We're using source-control, so this is a \"feature\" that we do not want!\n\n*.moved-aside\n\n####\n# OPTIONAL: Some well-known tools that people use side-by-side with Xcode / iOS development\n#\n# NB: I'd rather not include these here, but gitignore's design is weak and doesn't allow\n#     modular gitignore: you have to put EVERYTHING in one file.\n#\n# COCOAPODS:\n#\n# c.f. http://guides.cocoapods.org/using/using-cocoapods.html#what-is-a-podfilelock\n# c.f. http://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control\n#\n#!Podfile.lock\n#\n# RUBY:\n#\n# c.f. http://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/\n#\n#!Gemfile.lock\n#\n# IDEA:\n#\n#.idea\n#\n# TEXTMATE:\n#\n# -- UNVERIFIED: c.f. http://stackoverflow.com/a/50283/153422\n#\n#tm_build_errors\n\n####\n# UNKNOWN: recommended by others, but I can't discover what these files are\n#\n# Community suggestions (unverified, no evidence available - DISABLED by default)\n#\n# 1. Xcode 5 - VCS file\n#\n# \"The data in this file not represent state of your project.\n# If you'll leave this file in git - you will have merge conflicts during \n# pull your cahnges to other's repo\"\n#\n#*.xccheckout\n*.xccheckout\n```\n\n## Android studio .gitignore file\n```\n#built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Windows thumbnail db\nThumbs.db\n\n# OSX files\n.DS_Store\n\n# Eclipse project files\n.classpath\n.project\n\n# Android Studio\n*.iml\n.idea\n#.idea/workspace.xml - remove # and delete .idea if it better suit your needs.\n.gradle\nbuild/\n\n#NDK\nobj/\n```\n\n## NodeJS .gitignore file\n```\n# Node.js\n\n.DS_Store\nThumbs.db\n*.log\n\nlib-cov\n*.seed\n*.log\n*.csv\n*.dat\n*.out\n*.pid\n*.gz\n\npids\nlogs\nresults\n\nnpm-debug.log\nnode_modules/\n\n# KOAN\n\ndist\n.tmp\n.nodemon\nbower_components/\n.nodemonignore\n.sass-cache/\n.bower-*/\ntest/coverage/\nlogs/*\n!.gitkeep\n```","slug":"git-ignore-file","published":1,"updated":"2016-01-26T04:58:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxlh001ssnsuziro4auw"},{"title":"QQ公众UI组件自动适配UI","date":"2016-02-17T02:18:35.000Z","_content":"开发时使用标准UI组件，无需考虑使用什么控件，通过加载QQ公众UI自动适配UI\n\n示例: http://isux.tencent.com/wp-content/uploads/2015/12/20151221162207754.html\n","source":"_posts/QQ公众UI组件自动适配UI.md","raw":"---\ntitle: QQ公众UI组件自动适配UI\ndate: 2016-02-17 10:18:35\ntags:\n- css\n- javascript\n- ui\n---\n开发时使用标准UI组件，无需考虑使用什么控件，通过加载QQ公众UI自动适配UI\n\n示例: http://isux.tencent.com/wp-content/uploads/2015/12/20151221162207754.html\n","slug":"QQ公众UI组件自动适配UI","published":1,"updated":"2016-02-17T02:20:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxlk001wsnsufktzhakl"},{"title":"Javascript 进阶","date":"2016-01-26T04:53:00.000Z","_content":"## Head object/Global object\n\n- Head object只有一个，即window\n- Global object为全局变量（函数也是变量），它们的上级是Head object\n\n<pre>\nvar name = 'jason chuh';\nvar title = 'Mr.';\nvar walk = function(){\n    console.log('我在走路...');\n};\nconsole.log('name' in window);\nconsole.log('title' in window);\nconsole.log('walk' in window);\n\nconsole.log(window['name']);\nconsole.log(window['title']);\nconsole.log(window['walk']);\n</pre>\n\n### var 声明\n\n- 在函数内未使用var声明变量，会自动提升为global object\n\n<pre>\nvar func1 = function(){\n    withoutVar = '我是全局的?';\n};\nfunc1();\nconsole.log(withoutVar);\n</pre>\n\n## [] 与 dot\n\n- 对象的属性与方法，同时可以使用[]或.的方式来调用\n\n<pre>\nvar aSong = {\n    title: '江南Style',\n    singer: 'PSV',\n    duration: '6:43',\n    summary: function(prefix){\n        return prefix.concat(this.title).concat(this.singer).concat(this.duration);\n    }\n};\nconsole.log(aSong.title);\nconsole.log(aSong['title']);\nconsole.log(aSong['summary']('MTV:'));\n</pre>\n\n## 函数\n\n- 创建函数的3种方法\n\n<pre>\nfunction sum(x, y){ return x+y; }\nvar sum = function(x, y){ return x+y; }; // var sum = function sum(x,y){ return x+y; };\nvar sum = new Function('x','y', 'return x+y');\nconsole.log(sum(3,4));\n</pre>\n\n### 匿名函数\n\n- 用于临时函数，一次性函数(定义后马上运行)\n- 匿名函数的循环调用\n\n<pre>\nvar list = [\n  {name: 'jerry', age: 23},\n  {name: 'bill', age: 3},\n  {name: 'tom', age: 42},\n  {name: 'jason', age: 8}\n];\n\nvar sortedList = list.sort(function(a,b){\n  return a.age - b.age; // 为什么不使用 a.age === b.age\n\n  // 姓名如何排序？\n  // retun a.name > b.name;\n\n  // 多个字段如何排序？\n  // return (a.age - b.age) + (a.name > b.name);\n});\nconsole.log(sortedList);\n\n// Count Down\n\n(function(num){\n    if(num &lt; 0) return;\n\n    console.log(num);\n    num--;\n    arguments.callee(num);\n})(5);\n\n</pre>\n\n### 自动运行\n\n<pre>\n(function sum(x, y){})(5,6); // 常用\n(function sum(x, y){}(5,6));\n!function sum(x, y){}(5,6);\n</pre>\n\n### 作用域\n\n- 作用域是在定义时已经确定，非运行时得到\n- 只存在函数作用域，不存在块作用域\n\n<pre>\nvar myName = 'Mac';\nfunction tellMeName(){\n    var myName = 'PC';\n    console.log(myName);\n}\n\nconsole.log(myName);\n\nif(true){\n    myName = 'Pad';\n}\nconsole.log(myName);\n\n\nvar countDownFrom = function(num){\n    console.log(num);\n    num--;\n    if(num &lt; 0)\n        return false;\n    \n    arguments.callee(num);\n};\n\ncountDownFrom(5);\n</pre>\n\n### arguments\n\n- 函数的可变长参数\n- 使用arguments.callee得到函数自身\n\n<pre>\nvar sum = function(){\n  var len = arguments.length;\n  if(0 >= len){\n    return 0;\n  }else if(len &lt; 2){\n    return arguments[0];\n  } else {\n    var total = 0;\n    for(var i = 0; i &lt; len; i++){\n      total += arguments[i];\n    }\n    return total;\n  }\n};\n\nconsole.log(sum());\nconsole.log(sum(2));\nconsole.log(sum(2,3,4,5));\n</pre>\n\n## this对象\n\n- 运行时确定，可以被更改\n- 针对实例的引用\n- window是顶层的this\n\n<pre>\nconsole.log(window === this);\nvar weight = 1.23;\nconsole.log(weight, window.weight, this.weight);\n\nvar playGame = function(){};\nconsole.log(playGame, window.playGame, this.playGame);\n\n// 高阶函数\n\nvar callOtherFunction = function(otherFunc){\n    var testVariable = 123;\n    otherFunc();\n    console.log('调用结束');\n};\n\nvar testVariable = 999;\ncallOtherFunction(function(){\n    console.log(testVariable);\n});\n</pre>\n\n### call/apply\n\n- call与apply用于调用函数，同时改变this的定义\n- call与apply不同在于参数传递方式不同\n\n<pre>\nvar Phone = function(){\n    this.myName = 'Tim';\n    this.phoneNumber = '13888888888';\n    this.makeAPhoneCall = function(toName, toPhone){\n        console.log(this.myName+'('+this.phoneNumber+')打给'+toName+'('+toPhone+')');\n    };\n};\n\nvar myPhone = new Phone();\nmyPhone.makeAPhoneCall('Bill', '020 12345678');\n\nvar mike = {myName:'Mike', phoneNumber:'18999999999'};\nmyPhone.makeAPhoneCall.call(mike, 'Jerry', '10086');\nmyPhone.makeAPhoneCall.apply(mike, ['Jerry', '10086']);\n</pre>\n\n## prototype\n\n- 对象化的实现方案\n- prototype chain原型键, instance.property -> (class of instance).prototype.property -> superclass(class of instance).prototype.property -> ... -> object.prototype\n- instance.construct.prototype == class.prototype\n\n<pre>\nvar Fruit = function(){\n    this.name = 'Fruit';\n    this.tellMyName = function(){\n        console.log('My name is ' + this.name);\n    };\n};\nFruit.prototype.color = 'Green';\nFruit.prototype.season = 'Autumn';\n\nvar Orange = function(){\n    this.name = 'Orange';\n};\nOrange.prototype = new Fruit();\nFruit.prototype.season = 'Summer';\nFruit.prototype.taste = 'Sweet';\n\nvar newFruit = new Orange();\nnewFruit.taste = 'Acid';\n\nnewFruit.tellMyName();\nconsole.log(newFruit.color);\nconsole.log(newFruit.season);\nconsole.log(newFruit.taste);\n</pre>\n\n## String\n\n- concat与Array.join的效率\n\n<pre>\n// #1 使用+连接\nvar stringWithPlus = '';\nfor (var i = 0; i &lt; 1000000; i++) {\n    stringWithPlus += 'hello ';\n}\n\n// #2 使用concat方法\nvar stringWithConcat = '';\nfor (var i = 0; i &lt; 1000000; i++) {\n    stringWithConcat.concat('hello ');\n}\n\n// #3 使用Array.join\nvar stringBuffer = [];\nfor (var i = 0; i &lt; 1000000; i++) {\n    stringBuffer.push('hello');\n}\nvar stringByBuffer = stringBuffer.join(' ');\n\n// #4 使用underscore模板\nvar template = \"<% _.each(_.range(1000000), function(){ %><%=name%> <% }); %>\";\nvar compiled = _.template(template);\nconsole.log(compiled({name: 'hello'}));\n\n// #5 使用定时器执行, 支持亿次级运算，不会阻止主进程\nfunction concatString(count, str, callback){\n    var stringPool = [];\n    setTimeout(function(){\n        stringPool.push(str);\n        count--;\n        if(count > 0){\n            setTimeout(arguments.callee, 0.001);\n        } else {\n            callback(stringPool);\n        }\n    }, 0.001);\n}\n\nconcatString(100000000, 'hello', function(stringPool){\n    var combined = stringPool.join(\" \");\n    console.log(combined);\n});\n</pre>\n\n## null 与 undefined\n\n- undefined 代表没有初始化，null可用于表示空值状态\n- 不应人工赋予undefined值\n\n<pre>\nvar uninitVariable;\nconsole.log(uninitVariable === undefined);\nuninitVariable = 0;\nconsole.log(uninitVariable === undefined);\n</pre>\n\n## Boolean\n\n- 包括空格的字符串转换为Boolean对象，其值为true（所有类型转换为Boolean对象，其值为true）\n- Boolean对象实例始终为true，不要new 方法创建Boolean实例\n- false, 0, '', \"\", NaN, undefined, null为false，其它为true\n\n<pre>\nconsole.log(Boolean(new Boolean(false)));\nconsole.log(Boolean(new Boolean('')));\n\nconsole.log(Boolean(false));\nconsole.log(Boolean(0));\nconsole.log(Boolean(''));\nconsole.log(Boolean(\"\"));\nconsole.log(Boolean(NaN));\nconsole.log(Boolean(undefined));\nconsole.log(Boolean(null));\n</pre>","source":"_posts/Javascript 进阶.md","raw":"---\ntitle: Javascript 进阶\ndate: 2016-01-26 12:53:00\ntags:\n- Javascript\n---\n## Head object/Global object\n\n- Head object只有一个，即window\n- Global object为全局变量（函数也是变量），它们的上级是Head object\n\n<pre>\nvar name = 'jason chuh';\nvar title = 'Mr.';\nvar walk = function(){\n    console.log('我在走路...');\n};\nconsole.log('name' in window);\nconsole.log('title' in window);\nconsole.log('walk' in window);\n\nconsole.log(window['name']);\nconsole.log(window['title']);\nconsole.log(window['walk']);\n</pre>\n\n### var 声明\n\n- 在函数内未使用var声明变量，会自动提升为global object\n\n<pre>\nvar func1 = function(){\n    withoutVar = '我是全局的?';\n};\nfunc1();\nconsole.log(withoutVar);\n</pre>\n\n## [] 与 dot\n\n- 对象的属性与方法，同时可以使用[]或.的方式来调用\n\n<pre>\nvar aSong = {\n    title: '江南Style',\n    singer: 'PSV',\n    duration: '6:43',\n    summary: function(prefix){\n        return prefix.concat(this.title).concat(this.singer).concat(this.duration);\n    }\n};\nconsole.log(aSong.title);\nconsole.log(aSong['title']);\nconsole.log(aSong['summary']('MTV:'));\n</pre>\n\n## 函数\n\n- 创建函数的3种方法\n\n<pre>\nfunction sum(x, y){ return x+y; }\nvar sum = function(x, y){ return x+y; }; // var sum = function sum(x,y){ return x+y; };\nvar sum = new Function('x','y', 'return x+y');\nconsole.log(sum(3,4));\n</pre>\n\n### 匿名函数\n\n- 用于临时函数，一次性函数(定义后马上运行)\n- 匿名函数的循环调用\n\n<pre>\nvar list = [\n  {name: 'jerry', age: 23},\n  {name: 'bill', age: 3},\n  {name: 'tom', age: 42},\n  {name: 'jason', age: 8}\n];\n\nvar sortedList = list.sort(function(a,b){\n  return a.age - b.age; // 为什么不使用 a.age === b.age\n\n  // 姓名如何排序？\n  // retun a.name > b.name;\n\n  // 多个字段如何排序？\n  // return (a.age - b.age) + (a.name > b.name);\n});\nconsole.log(sortedList);\n\n// Count Down\n\n(function(num){\n    if(num &lt; 0) return;\n\n    console.log(num);\n    num--;\n    arguments.callee(num);\n})(5);\n\n</pre>\n\n### 自动运行\n\n<pre>\n(function sum(x, y){})(5,6); // 常用\n(function sum(x, y){}(5,6));\n!function sum(x, y){}(5,6);\n</pre>\n\n### 作用域\n\n- 作用域是在定义时已经确定，非运行时得到\n- 只存在函数作用域，不存在块作用域\n\n<pre>\nvar myName = 'Mac';\nfunction tellMeName(){\n    var myName = 'PC';\n    console.log(myName);\n}\n\nconsole.log(myName);\n\nif(true){\n    myName = 'Pad';\n}\nconsole.log(myName);\n\n\nvar countDownFrom = function(num){\n    console.log(num);\n    num--;\n    if(num &lt; 0)\n        return false;\n    \n    arguments.callee(num);\n};\n\ncountDownFrom(5);\n</pre>\n\n### arguments\n\n- 函数的可变长参数\n- 使用arguments.callee得到函数自身\n\n<pre>\nvar sum = function(){\n  var len = arguments.length;\n  if(0 >= len){\n    return 0;\n  }else if(len &lt; 2){\n    return arguments[0];\n  } else {\n    var total = 0;\n    for(var i = 0; i &lt; len; i++){\n      total += arguments[i];\n    }\n    return total;\n  }\n};\n\nconsole.log(sum());\nconsole.log(sum(2));\nconsole.log(sum(2,3,4,5));\n</pre>\n\n## this对象\n\n- 运行时确定，可以被更改\n- 针对实例的引用\n- window是顶层的this\n\n<pre>\nconsole.log(window === this);\nvar weight = 1.23;\nconsole.log(weight, window.weight, this.weight);\n\nvar playGame = function(){};\nconsole.log(playGame, window.playGame, this.playGame);\n\n// 高阶函数\n\nvar callOtherFunction = function(otherFunc){\n    var testVariable = 123;\n    otherFunc();\n    console.log('调用结束');\n};\n\nvar testVariable = 999;\ncallOtherFunction(function(){\n    console.log(testVariable);\n});\n</pre>\n\n### call/apply\n\n- call与apply用于调用函数，同时改变this的定义\n- call与apply不同在于参数传递方式不同\n\n<pre>\nvar Phone = function(){\n    this.myName = 'Tim';\n    this.phoneNumber = '13888888888';\n    this.makeAPhoneCall = function(toName, toPhone){\n        console.log(this.myName+'('+this.phoneNumber+')打给'+toName+'('+toPhone+')');\n    };\n};\n\nvar myPhone = new Phone();\nmyPhone.makeAPhoneCall('Bill', '020 12345678');\n\nvar mike = {myName:'Mike', phoneNumber:'18999999999'};\nmyPhone.makeAPhoneCall.call(mike, 'Jerry', '10086');\nmyPhone.makeAPhoneCall.apply(mike, ['Jerry', '10086']);\n</pre>\n\n## prototype\n\n- 对象化的实现方案\n- prototype chain原型键, instance.property -> (class of instance).prototype.property -> superclass(class of instance).prototype.property -> ... -> object.prototype\n- instance.construct.prototype == class.prototype\n\n<pre>\nvar Fruit = function(){\n    this.name = 'Fruit';\n    this.tellMyName = function(){\n        console.log('My name is ' + this.name);\n    };\n};\nFruit.prototype.color = 'Green';\nFruit.prototype.season = 'Autumn';\n\nvar Orange = function(){\n    this.name = 'Orange';\n};\nOrange.prototype = new Fruit();\nFruit.prototype.season = 'Summer';\nFruit.prototype.taste = 'Sweet';\n\nvar newFruit = new Orange();\nnewFruit.taste = 'Acid';\n\nnewFruit.tellMyName();\nconsole.log(newFruit.color);\nconsole.log(newFruit.season);\nconsole.log(newFruit.taste);\n</pre>\n\n## String\n\n- concat与Array.join的效率\n\n<pre>\n// #1 使用+连接\nvar stringWithPlus = '';\nfor (var i = 0; i &lt; 1000000; i++) {\n    stringWithPlus += 'hello ';\n}\n\n// #2 使用concat方法\nvar stringWithConcat = '';\nfor (var i = 0; i &lt; 1000000; i++) {\n    stringWithConcat.concat('hello ');\n}\n\n// #3 使用Array.join\nvar stringBuffer = [];\nfor (var i = 0; i &lt; 1000000; i++) {\n    stringBuffer.push('hello');\n}\nvar stringByBuffer = stringBuffer.join(' ');\n\n// #4 使用underscore模板\nvar template = \"<% _.each(_.range(1000000), function(){ %><%=name%> <% }); %>\";\nvar compiled = _.template(template);\nconsole.log(compiled({name: 'hello'}));\n\n// #5 使用定时器执行, 支持亿次级运算，不会阻止主进程\nfunction concatString(count, str, callback){\n    var stringPool = [];\n    setTimeout(function(){\n        stringPool.push(str);\n        count--;\n        if(count > 0){\n            setTimeout(arguments.callee, 0.001);\n        } else {\n            callback(stringPool);\n        }\n    }, 0.001);\n}\n\nconcatString(100000000, 'hello', function(stringPool){\n    var combined = stringPool.join(\" \");\n    console.log(combined);\n});\n</pre>\n\n## null 与 undefined\n\n- undefined 代表没有初始化，null可用于表示空值状态\n- 不应人工赋予undefined值\n\n<pre>\nvar uninitVariable;\nconsole.log(uninitVariable === undefined);\nuninitVariable = 0;\nconsole.log(uninitVariable === undefined);\n</pre>\n\n## Boolean\n\n- 包括空格的字符串转换为Boolean对象，其值为true（所有类型转换为Boolean对象，其值为true）\n- Boolean对象实例始终为true，不要new 方法创建Boolean实例\n- false, 0, '', \"\", NaN, undefined, null为false，其它为true\n\n<pre>\nconsole.log(Boolean(new Boolean(false)));\nconsole.log(Boolean(new Boolean('')));\n\nconsole.log(Boolean(false));\nconsole.log(Boolean(0));\nconsole.log(Boolean(''));\nconsole.log(Boolean(\"\"));\nconsole.log(Boolean(NaN));\nconsole.log(Boolean(undefined));\nconsole.log(Boolean(null));\n</pre>","slug":"Javascript 进阶","published":1,"updated":"2016-01-26T04:54:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxlo0022snsui4nx3n1u"},{"title":"Fiddle调试iOS/Android APP SSL安全证书的方法","date":"2016-02-23T07:41:08.000Z","_content":"在调试APP时，Fiddler是个很好用的工具，当调试SSL接口时，需要做一些配置才能绕过SSL证书的限制。\n\n1. 进入菜单：Tools > Fiddler Options > Connections. 勾选：Allow remote computers to connect.\n2. 设置iOS或Android的代理，注意IP和端口都要正确\n3. 下载 CertMaker for iOS and Android 插件，下载地址：http://www.telerik.com/fiddler/add-ons\n4. 重启Fiddler\n5. 用iPhone或Android手机打开： http://ipv4.fiddler:8888，如果不能访问请使用ip进行访问\n6. 点击最下面的“FiddlerRoot certificate”链接，确认安装证书\n7. 再进入Fiddler，就可以查看SSL接口的数据了\n\n* 如果还是无法生效，可以右键点击连接，添加URL到proxy列表。","source":"_posts/Fiddle调试iOS-Android-APP-SSL安全证书的方法.md","raw":"---\ntitle: Fiddle调试iOS/Android APP SSL安全证书的方法\ndate: 2016-02-23 15:41:08\ntags:\n- iOS\n- Android\n- SSL debug\n- Fiddler\n---\n在调试APP时，Fiddler是个很好用的工具，当调试SSL接口时，需要做一些配置才能绕过SSL证书的限制。\n\n1. 进入菜单：Tools > Fiddler Options > Connections. 勾选：Allow remote computers to connect.\n2. 设置iOS或Android的代理，注意IP和端口都要正确\n3. 下载 CertMaker for iOS and Android 插件，下载地址：http://www.telerik.com/fiddler/add-ons\n4. 重启Fiddler\n5. 用iPhone或Android手机打开： http://ipv4.fiddler:8888，如果不能访问请使用ip进行访问\n6. 点击最下面的“FiddlerRoot certificate”链接，确认安装证书\n7. 再进入Fiddler，就可以查看SSL接口的数据了\n\n* 如果还是无法生效，可以右键点击连接，添加URL到proxy列表。","slug":"Fiddle调试iOS-Android-APP-SSL安全证书的方法","published":1,"updated":"2016-02-23T07:49:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxlu0025snsua0bq7l0v"},{"title":"Elastic Search指定分析器与分析器测试","date":"2016-01-26T04:50:44.000Z","_content":"# 中文全文检索,使用mmseg\n\n## 创建索引\nPUT http://localhost:9200/index \n\n## 设置mapping\n```\nPOST /index/fulltext/_mapping\n{\n    \"fulltext\": {\n        \"_all\": {\n            \"indexAnalyzer\": \"mmseg\",\n            \"searchAnalyzer\": \"mmseg\",\n            \"term_vector\": \"no\",\n            \"store\": \"false\"\n        },\n        \"properties\": {\n            \"content\": {\n                \"type\": \"string\",\n                \"store\": \"no\",\n                \"term_vector\": \"with_positions_offsets\",\n                \"indexAnalyzer\": \"mmseg\",\n                \"searchAnalyzer\": \"mmseg\",\n                \"include_in_all\": \"true\",\n                \"boost\": 8\n            }\n        }\n    }\n}\n```\n\n## 检查mapping\nGET /index/fulltext/_mapping\n\n## 批量索引\n```\nPOST /index/fulltext/_bulk\n{\"index\":{\"_id\":1}}\n{content:\"美国留给伊拉克的是个烂摊子吗\"}\n{\"index\":{\"_id\":2}}\n{content:\"公安部：各地校车将享最高路权\"}\n{\"index\":{\"_id\":3}}\n{content:\"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船\"}\n{\"index\":{\"_id\":4}}\n{content:\"中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首\"}\n```\n\n## 搜索\n```\nPOST /index/fulltext/_search?pretty=true\n{\n    \"query\" : { \"term\" : { \"content\" : \"中国\" }},\n    \"highlight\" : {\n        \"pre_tags\" : [\"<tag1>\", \"<tag2>\"],\n        \"post_tags\" : [\"</tag1>\", \"</tag2>\"],\n        \"fields\" : {\n            \"content\" : {}\n        }\n    }\n}\n```\n\n## 测试中文分词\n\nDELETE /test/\n\n```\n// 指定分析器和检索器\nPOST /test/\n{\n    \"index\": {\n        \"number_of_shards\": 1,\n        \"number_of_replicas\": 0,\n        \"analysis\": {\n            \"analyzer\": {\n                \"mmseg_search\": {\n                    \"type\": \"mmseg\",\n                    \"seg_mode\": \"search\",\n                    \"stop\": true\n                },\n                \"mmseg_index\": {\n                    \"type\": \"mmseg\",\n                    \"seg_mode\": \"index\",\n                    \"stop\": true\n                }\n            }\n        }\n    }\n}\n```\n\n// 测试分析器\n`POST /test/_analyze?analyzer=mmseg_index`\n{\"中华人民共和国\"}\n\n\nPOST /test/1\n`{\"title\": \"中华人民共和国\"}`\n\n// elastic search Ready to fly suite\nhttps://github.com/medcl/elasticsearch-rtf\n","source":"_posts/Elastic Search指定分析器与分析器测试.md","raw":"---\ntitle: Elastic Search指定分析器与分析器测试\ndate: 2016-01-26 12:50:44\ntags:\n- Elastic Search\n- 全文检索\n---\n# 中文全文检索,使用mmseg\n\n## 创建索引\nPUT http://localhost:9200/index \n\n## 设置mapping\n```\nPOST /index/fulltext/_mapping\n{\n    \"fulltext\": {\n        \"_all\": {\n            \"indexAnalyzer\": \"mmseg\",\n            \"searchAnalyzer\": \"mmseg\",\n            \"term_vector\": \"no\",\n            \"store\": \"false\"\n        },\n        \"properties\": {\n            \"content\": {\n                \"type\": \"string\",\n                \"store\": \"no\",\n                \"term_vector\": \"with_positions_offsets\",\n                \"indexAnalyzer\": \"mmseg\",\n                \"searchAnalyzer\": \"mmseg\",\n                \"include_in_all\": \"true\",\n                \"boost\": 8\n            }\n        }\n    }\n}\n```\n\n## 检查mapping\nGET /index/fulltext/_mapping\n\n## 批量索引\n```\nPOST /index/fulltext/_bulk\n{\"index\":{\"_id\":1}}\n{content:\"美国留给伊拉克的是个烂摊子吗\"}\n{\"index\":{\"_id\":2}}\n{content:\"公安部：各地校车将享最高路权\"}\n{\"index\":{\"_id\":3}}\n{content:\"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船\"}\n{\"index\":{\"_id\":4}}\n{content:\"中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首\"}\n```\n\n## 搜索\n```\nPOST /index/fulltext/_search?pretty=true\n{\n    \"query\" : { \"term\" : { \"content\" : \"中国\" }},\n    \"highlight\" : {\n        \"pre_tags\" : [\"<tag1>\", \"<tag2>\"],\n        \"post_tags\" : [\"</tag1>\", \"</tag2>\"],\n        \"fields\" : {\n            \"content\" : {}\n        }\n    }\n}\n```\n\n## 测试中文分词\n\nDELETE /test/\n\n```\n// 指定分析器和检索器\nPOST /test/\n{\n    \"index\": {\n        \"number_of_shards\": 1,\n        \"number_of_replicas\": 0,\n        \"analysis\": {\n            \"analyzer\": {\n                \"mmseg_search\": {\n                    \"type\": \"mmseg\",\n                    \"seg_mode\": \"search\",\n                    \"stop\": true\n                },\n                \"mmseg_index\": {\n                    \"type\": \"mmseg\",\n                    \"seg_mode\": \"index\",\n                    \"stop\": true\n                }\n            }\n        }\n    }\n}\n```\n\n// 测试分析器\n`POST /test/_analyze?analyzer=mmseg_index`\n{\"中华人民共和国\"}\n\n\nPOST /test/1\n`{\"title\": \"中华人民共和国\"}`\n\n// elastic search Ready to fly suite\nhttps://github.com/medcl/elasticsearch-rtf\n","slug":"Elastic Search指定分析器与分析器测试","published":1,"updated":"2016-01-26T04:52:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhumxly002csnsu4j045a30"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"civhumxiu0000snsuu5m2mit8","tag_id":"civhumxj10001snsuaga8ct8d","_id":"civhumxj40004snsualc7mgbs"},{"post_id":"civhumxiu0000snsuu5m2mit8","tag_id":"civhumxj30002snsu387rgus0","_id":"civhumxj40005snsu093f5jno"},{"post_id":"civhumxiu0000snsuu5m2mit8","tag_id":"civhumxj40003snsu6dqu86hy","_id":"civhumxj40006snsu09tbc846"},{"post_id":"civhumxjw0008snsuljdsez9j","tag_id":"civhumxjx0009snsuex4h90vu","_id":"civhumxjy000dsnsux33u27gq"},{"post_id":"civhumxjw0008snsuljdsez9j","tag_id":"civhumxjx000asnsumteykqu1","_id":"civhumxjy000esnsukjd6olji"},{"post_id":"civhumxjw0008snsuljdsez9j","tag_id":"civhumxjx000bsnsuyjis5u5v","_id":"civhumxjy000fsnsuw2yum9yx"},{"post_id":"civhumxjw0008snsuljdsez9j","tag_id":"civhumxjy000csnsubtvtsn8k","_id":"civhumxjy000gsnsue49k82sb"},{"post_id":"civhumxk1000hsnsuxo42ai4x","tag_id":"civhumxk2000isnsungjxt7up","_id":"civhumxk4000lsnsuf0xiter2"},{"post_id":"civhumxk1000hsnsuxo42ai4x","tag_id":"civhumxk2000jsnsutlupzu4v","_id":"civhumxk4000msnsuscz7cfxx"},{"post_id":"civhumxk1000hsnsuxo42ai4x","tag_id":"civhumxk4000ksnsuf2ivj4ch","_id":"civhumxk4000nsnsuuwx5qtpd"},{"post_id":"civhumxk6000osnsu1ltrhlde","tag_id":"civhumxk7000psnsu6kwa60oq","_id":"civhumxk9000ssnsuj7i5q1v9"},{"post_id":"civhumxk6000osnsu1ltrhlde","tag_id":"civhumxk8000qsnsu4glodi69","_id":"civhumxk9000tsnsuncugih23"},{"post_id":"civhumxk6000osnsu1ltrhlde","tag_id":"civhumxk9000rsnsun1mvbmf6","_id":"civhumxk9000usnsu0z2ihx42"},{"post_id":"civhumxkb000vsnsusruhxk3t","tag_id":"civhumxkd000wsnsuumnr7616","_id":"civhumxkd000zsnsuthqnur5j"},{"post_id":"civhumxkb000vsnsusruhxk3t","tag_id":"civhumxkd000xsnsubwsisjvg","_id":"civhumxke0010snsugkz63dm4"},{"post_id":"civhumxkb000vsnsusruhxk3t","tag_id":"civhumxkd000ysnsuipfvae1k","_id":"civhumxke0011snsum6qkpz5f"},{"post_id":"civhumxkg0012snsu6zno8g74","tag_id":"civhumxki0013snsux7qqffc2","_id":"civhumxkj0015snsug2woi7p0"},{"post_id":"civhumxkg0012snsu6zno8g74","tag_id":"civhumxki0014snsu6sj6ry8t","_id":"civhumxkj0016snsu34se9ugd"},{"post_id":"civhumxkn0017snsunv9dz0ju","tag_id":"civhumxkq0018snsu94s5pu7c","_id":"civhumxl3001asnsu84sk6dy0"},{"post_id":"civhumxkn0017snsunv9dz0ju","tag_id":"civhumxl20019snsudxoxokfp","_id":"civhumxl3001bsnsuy4iqf926"},{"post_id":"civhumxl3001csnsuj2ju1ndg","tag_id":"civhumxl4001dsnsu6dacp2pe","_id":"civhumxl6001gsnsu7dkygcz8"},{"post_id":"civhumxl3001csnsuj2ju1ndg","tag_id":"civhumxl6001esnsuis5egkvl","_id":"civhumxl6001hsnsu9n8mzt71"},{"post_id":"civhumxl3001csnsuj2ju1ndg","tag_id":"civhumxl6001fsnsulunxgnbi","_id":"civhumxl6001isnsuvp34yyse"},{"post_id":"civhumxl7001jsnsuhyp0d9ig","tag_id":"civhumxla001ksnsumbd41jmc","_id":"civhumxlc001msnsuyh09ssnu"},{"post_id":"civhumxl7001jsnsuhyp0d9ig","tag_id":"civhumxlb001lsnsu849mqzlf","_id":"civhumxlc001nsnsuhpuceo79"},{"post_id":"civhumxld001osnsuisxmj6oi","tag_id":"civhumxla001ksnsumbd41jmc","_id":"civhumxle001qsnsuwcnu2pcb"},{"post_id":"civhumxld001osnsuisxmj6oi","tag_id":"civhumxle001psnsucido2zlh","_id":"civhumxlf001rsnsumdjwws3z"},{"post_id":"civhumxlh001ssnsuziro4auw","tag_id":"civhumxla001ksnsumbd41jmc","_id":"civhumxli001usnsuzyculo61"},{"post_id":"civhumxlh001ssnsuziro4auw","tag_id":"civhumxli001tsnsugrs92zsy","_id":"civhumxli001vsnsu5p4c4mzy"},{"post_id":"civhumxlk001wsnsufktzhakl","tag_id":"civhumxkd000ysnsuipfvae1k","_id":"civhumxlm001zsnsu01b4h20v"},{"post_id":"civhumxlk001wsnsufktzhakl","tag_id":"civhumxll001xsnsu1wxcu29a","_id":"civhumxlm0020snsu79welgwm"},{"post_id":"civhumxlk001wsnsufktzhakl","tag_id":"civhumxlm001ysnsu7haw97va","_id":"civhumxlm0021snsulvp0a09e"},{"post_id":"civhumxlo0022snsui4nx3n1u","tag_id":"civhumxlr0023snsumky0x36g","_id":"civhumxls0024snsu4o0x56a3"},{"post_id":"civhumxlu0025snsua0bq7l0v","tag_id":"civhumxk8000qsnsu4glodi69","_id":"civhumxlw0028snsu1bznkfg8"},{"post_id":"civhumxlu0025snsua0bq7l0v","tag_id":"civhumxk9000rsnsun1mvbmf6","_id":"civhumxlx0029snsugwchc5i7"},{"post_id":"civhumxlu0025snsua0bq7l0v","tag_id":"civhumxlw0026snsuipg84jkm","_id":"civhumxlx002asnsuju2dv621"},{"post_id":"civhumxlu0025snsua0bq7l0v","tag_id":"civhumxlw0027snsuaovmi6i3","_id":"civhumxlx002bsnsuma8tae2b"},{"post_id":"civhumxly002csnsu4j045a30","tag_id":"civhumxki0013snsux7qqffc2","_id":"civhumxlz002dsnsu38keffku"},{"post_id":"civhumxly002csnsu4j045a30","tag_id":"civhumxki0014snsu6sj6ry8t","_id":"civhumxlz002esnsuavw3kl2i"}],"Tag":[{"name":"C#","_id":"civhumxj10001snsuaga8ct8d"},{"name":"编码规范","_id":"civhumxj30002snsu387rgus0"},{"name":"Coding","_id":"civhumxj40003snsu6dqu86hy"},{"name":"ssh","_id":"civhumxjx0009snsuex4h90vu"},{"name":"http proxy","_id":"civhumxjx000asnsumteykqu1"},{"name":"nc","_id":"civhumxjx000bsnsuyjis5u5v"},{"name":"corkscrew","_id":"civhumxjy000csnsubtvtsn8k"},{"name":"banggood.com","_id":"civhumxk2000isnsungjxt7up"},{"name":"ebay","_id":"civhumxk2000jsnsutlupzu4v"},{"name":"棒谷","_id":"civhumxk4000ksnsuf2ivj4ch"},{"name":"技术分享","_id":"civhumxk7000psnsu6kwa60oq"},{"name":"iOS","_id":"civhumxk8000qsnsu4glodi69"},{"name":"Android","_id":"civhumxk9000rsnsun1mvbmf6"},{"name":"前端","_id":"civhumxkd000wsnsuumnr7616"},{"name":"js","_id":"civhumxkd000xsnsubwsisjvg"},{"name":"css","_id":"civhumxkd000ysnsuipfvae1k"},{"name":"Elastic Search","_id":"civhumxki0013snsux7qqffc2"},{"name":"全文检索","_id":"civhumxki0014snsu6sj6ry8t"},{"name":"tmux","_id":"civhumxkq0018snsu94s5pu7c"},{"name":"iterm","_id":"civhumxl20019snsudxoxokfp"},{"name":"linux","_id":"civhumxl4001dsnsu6dacp2pe"},{"name":"command","_id":"civhumxl6001esnsuis5egkvl"},{"name":"network","_id":"civhumxl6001fsnsulunxgnbi"},{"name":"git","_id":"civhumxla001ksnsumbd41jmc"},{"name":"git revert","_id":"civhumxlb001lsnsu849mqzlf"},{"name":"git rebase","_id":"civhumxle001psnsucido2zlh"},{"name":"gitignore","_id":"civhumxli001tsnsugrs92zsy"},{"name":"javascript","_id":"civhumxll001xsnsu1wxcu29a"},{"name":"ui","_id":"civhumxlm001ysnsu7haw97va"},{"name":"Javascript","_id":"civhumxlr0023snsumky0x36g"},{"name":"SSL debug","_id":"civhumxlw0026snsuipg84jkm"},{"name":"Fiddler","_id":"civhumxlw0027snsuaovmi6i3"}]}}